var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["00","access","act","action","ad","algorithm","amount","angular","angularbg3cheat","api","attack","bonu","build","built","button","c77de.web.app","calcul","calculations.service.t","call","certain","check","check.component.t","compodoc","compon","contain","custom","damag","data","decis","deploy","design","detail","determin","dice","dice.thi","diceset","diceset.t","die","dnd","dnd,and","dnd.tailwindcss","done","dynam","each","easier","firebas","form","form.compon","form.component.t","formreus","found","frontend","function","github","gotten","handl","here","hold","https://test","https://www.dnd5eapi.co","implement","index","inform","input","inputmodifi","karma.document","layout.test","likelihood","list","local","made","main","make","match","materi","nektos.deploy","organ","page","pageit","play","possibl","properli","readm","relat","resourc","result","reusabl","roll","rolls.component.t","servic","show","side","skill","skillcheckcalc","spell","spell.t","spells.service.t","stepper.component.t","style","subsect","suce","suceeed","tabl","table.component.t","tablereus","technolog","test","tri","type","type=\"numb","understand","us","valu","video","webpag","websit"],"overview.html":["10","2","8","browser","class","compon","inject","interfac","match","out","overview","reset","result","support","svg","zoom"],"modules.html":["match","modul","result"],"components/AppComponent.html":["angular","angular/cor","angular/material/button","angular/material/icon","angular/material/list","angular/material/sidenav","angular/material/toolbar","angular/rout","app","app.component.html","app.component.scss","appcompon","bg3","cheat","class","compon","default","descript","export","file","hold","home","import","info","link","matbuttonmodul","match","maticonmodul","matlistmodul","matsidenavmodul","mattoolbarmodul","metadata","navbar","organ","outlet","page","properti","result","root","router","routerlink","routerlink,routermodul","routermodul","routeroutlet","selector","shown","side","sourc","src/app/app.component.t","standalon","string","styleurl","templateurl","titl","true","valu","viewencapsul"],"components/AttackRollsComponent.html":["0","1","2","addobservabletoautocomplet","addobservabletoleveldropdown","allow","amount","angular/common","angular/cor","angular/form","angular/material/autocomplet","angular/material/button","angular/material/card","angular/material/input","angular/material/select","api","app","array","array(6","array(7).keys()].slice(spell.level","attack","attackrollscompon","attackrollsform","attackrollsformsubmit","autocomplet","base","bonu","boolean","calcul","calculations.servic","chang","class","commonmodul","compon","componentref","console.log('attack","console.log('submit","const","constructor","convert","current","currentspellrang","damag","default","descript","dice","dicebonuscompon","dicebonusformcompon","dicecalcresult","dicecalcservic","dicecalculationsservic","diceresult","dicerol","diceset","diceset(json.pars","diceseti","die","diedict","dierollresultstablecompon","displayspellautocompletevalue(selectedvalu","document.getelementbyid('damag","dropdown","empti","export","file","filter(spelllist","filteredgroupspelllist","for(let","forkjoin","forkjoin(spellsgroups).pip","form","form.compon","form/dic","formcontrol","formcontrol(this.selectedspell?.level","formgroup","generatediceset","generatetable(tableinput","get","hardcodedautocomplet","if(minel","if(spell.level","if(tableinput","implement","import","info","inform","initi","inject","inject(dicecalculationsservic","inject(spellsservic","json.stringify(this.attackrollsform.value))['diebonus","level","levelnum","link","map","map(spellgroup","matautocompletemodul","matbuttonmodul","matcardmodul","match","matinputmodul","matselectmodul","max","maxel","maxelement.innertext","metadata","method","min","minel","minelement.innertext","minlevel","name","navbar","navbarit","new","ngoninit","number","observ","oninit","param","properti","rawspelllist","reactiveformsmodul","read","receiv","response.result","result","return","roll","rolls.component.html","rolls.component.scss","rolls.component.t","rolls/attack","rxj","search","select","selectedspel","selectedvalu","selectedvalue.nam","selectedvalue?.url","selectedvalueasstr","selector","set","setgroupedspelllist","show","shown","sourc","spell","spell.damage[minlevel].d10","spell.damage[minlevel].d12","spell.damage[minlevel].d4","spell.damage[minlevel].d6","spell.damage[minlevel].d8","spell.name.tolowercase().startswith(spellstr","spellgroup.map(spelllist","spelli","spelllevel","spelllist.filter(spel","spelllist.length","spellrespons","spellresponseresult","spells.servic","spellsearchinput","spellsearchinput?.nam","spellsgroup","spellsservic","spellstr","spellstring?.tolowercas","src/app/attack","standalon","startwith","store","string","styleurl","subscrib","switchmap","switchmap(spellsearchinput","table.compon","table/di","tableinput","tableref","templateurl","testautocomplet","this.#tableref","this.#tableref?.setinput('diceresult","this.addobservabletoautocomplet","this.addobservabletoleveldropdown","this.attackrollsform.get('spell')!.valuechanges.pip","this.attackrollsform.get('spell')!.valuechanges.subscrib","this.attackrollsform.get('spelllevel')!.valuechanges.subscrib","this.attackrollsform.valuechanges.subscribe(valu","this.currentspellrang","this.currentspellrange[0","this.dicebonuscomponent.d10","this.dicebonuscomponent.d12","this.dicebonuscomponent.d4","this.dicebonuscomponent.d6","this.dicebonuscomponent.d8","this.dicecalcservice.dicecalcresults(diceset","this.dicecalcservice.maxroll(diceset).tostr","this.dicecalcservice.minroll(diceset).tostr","this.filteredgroupspelllist","this.generatediceset","this.generatetable(dicecalcresult","this.generatetable(undefin","this.rawspelllist","this.selectedspel","this.selectedspell?.damage[levelnum].d10","this.selectedspell?.damage[levelnum].d12","this.selectedspell?.damage[levelnum].d4","this.selectedspell?.damage[levelnum].d6","this.selectedspell?.damage[levelnum].d8","this.setgroupedspelllist","this.spellsservice.getallspel","this.spellsservice.getspell(selectedvalueasstr","this.vcr()?.clear","this.vcr()?.createcomponent(dierollresultstablecompon","true","type","typeof","undefin","up","updat","us","user","valu","variabl","vcr","viewchild","viewchild('dieform","viewchild('tablecontain","viewchildren","viewcontainerref","void"],"components/CharacterSheetComponent.html":["angular/cor","app","charact","charactersheetcompon","class","compon","export","file","import","info","match","metadata","result","selector","sheet","sheet.component.html","sheet.component.scss","sheet.component.t","sheet/charact","sourc","src/app/charact","standalon","styleurl","templateurl","true"],"components/DiceBonusFormComponent.html":["ad","angular/cor","angular/form","angular/material/card","app","attack","automat","bonu","both","check","class","compon","componentth","control","controlcontain","controlkey","d10","d10(dicenum","d12","d12(dicenum","d4","d4(dicenum","d6","d6(dicenum","d8","d8(dicenum","default","descript","dice","dicebonusformcompon","edit","edit.thi","export","file","form","form.component.html","form.component.scss","form.component.t","form/dic","formcontrol","formcontrol(0","formgroup","hold","import","info","inject","inject(controlcontain","input","input({requir","label","matcardmodul","match","metadata","modifi","new","ngondestroy","ngoninit","number","parentcontain","parentformgroup","properti","provid","public","reactiveformsmodul","result","return","roll","selector","set","skill","skipself","sourc","src/app/dic","standalon","stepper/stepper.compon","steppercompon","styleurl","templateurl","this.parentcontainer.control","this.parentformgroup.addcontrol(this.controlkey","this.parentformgroup.get(this.controlkey)?.get('d10","this.parentformgroup.get(this.controlkey)?.get('d10')?.setvalue(dicenum","this.parentformgroup.get(this.controlkey)?.get('d12","this.parentformgroup.get(this.controlkey)?.get('d12')?.setvalue(dicenum","this.parentformgroup.get(this.controlkey)?.get('d4","this.parentformgroup.get(this.controlkey)?.get('d4')?.setvalue(dicenum","this.parentformgroup.get(this.controlkey)?.get('d6","this.parentformgroup.get(this.controlkey)?.get('d6')?.setvalue(dicenum","this.parentformgroup.get(this.controlkey)?.get('d8","this.parentformgroup.get(this.controlkey)?.get('d8')?.setvalue(dicenum","this.parentformgroup.removecontrol(this.controlkey","true","us","usefactori","user","valu","viewprovid"],"components/DieRollResultsTableComponent.html":["angular/common","angular/cor","angular/material/t","app","appear","attack","bar","block","both","calculations.servic","calculations.service.t","calculations.service.ts.each","chanc","check","class","commonmodul","compon","creat","cum","descript","dice","dicecalcul","dicecalculationsservic","diceresult","diceset","diceset,th","die","dierollresultstablecompon","displayedcolumn","each","export","file","form","higher","import","info","inform","inject","inject(dicecalculationsservic","input","look","looks.thi","match","materi","mattablemodul","metadata","num","number","organ","percentag","possibl","properti","repres","result","roll","roll,and","roll,th","row","selector","skill","sourc","specif","src/app/di","standalon","string","styleurl","tabl","table.component.html","table.component.scss","table.component.t","table/di","templateurl","this.dicecalculations.defaultd20rollresult","true","type","ui","us","valu","value,th","visual"],"components/NavbarComponent.html":["angular/cdk/layout","angular/common","angular/cor","angular/material/button","angular/material/icon","angular/material/list","angular/material/sidenav","angular/material/toolbar","app","asyncpip","breakpoint","breakpointobserv","class","compon","export","file","import","info","inject","inject(breakpointobserv","ishandset","map","map(result","matbuttonmodul","match","maticonmodul","matlistmodul","matsidenavmodul","mattoolbarmodul","metadata","navbar","navbar.component.html","navbar.component.scss","navbarcompon","observ","pipe","privat","properti","result","result.match","rxj","rxjs/oper","selector","sharereplay","sourc","src/app/navbar/navbar.component.t","standalon","styleurl","templateurl","this.breakpointobserver.observe(breakpoints.handset","true"],"components/NotFoundComponent.html":["angular/cor","app","class","compon","export","file","found","found.component.html","found.component.scss","found.component.t","found/not","import","info","match","metadata","notfoundcompon","result","selector","sourc","src/app/not","standalon","styleurl","templateurl","true"],"components/OverlayComponent.html":["abbrevi","address","address2","addressform","ak","al","alabama","alaska","alert('thank","american","angular/cor","angular/form","angular/material/button","angular/material/card","angular/material/input","angular/material/radio","angular/material/select","app","ar","arizona","arkansa","az","boolean","ca","california","carolina","citi","class","co","colorado","columbia","compani","compon","connecticut","ct","dakota","dc","de","default","delawar","district","export","fals","fb","feder","file","firstnam","fl","florida","fm","formbuild","free","ga","georgia","gu","guam","hampshir","hasunitnumb","hawaii","hi","ia","id","idaho","il","illinoi","import","indiana","info","inject","inject(formbuild","iowa","island","jersey","kansa","kentucki","ks","ky","la","lastnam","louisiana","ma","main","mariana","marshal","maryland","massachusett","matbuttonmodul","matcardmodul","match","matinputmodul","matradiomodul","matselectmodul","md","metadata","method","mexico","mh","mi","michigan","micronesia","minnesota","mississippi","missouri","mn","mo","montana","mp","ms","mt","name","nc","nd","ne","nebraska","nevada","new","nh","nj","nm","north","northern","null","nv","ny","oh","ohio","ok","oklahoma","onsubmit","oregon","overlay","overlay.component.html","overlay.component.scss","overlaycompon","pa","palau","pennsylvania","postalcod","pr","privat","properti","puerto","pw","reactiveformsmodul","result","return","rhode","ri","rico","samoa","sc","sd","selector","ship","sourc","south","src/app/overlay/overlay.component.t","standalon","state","string","styleurl","templateurl","tennesse","texa","this.fb.group","tn","true","tx","ut","utah","va","valid","validators.compos","validators.maxlength(5","validators.minlength(5","validators.requir","valu","vermont","vi","virgin","virginia","void","vt","wa","washington","west","wi","wisconsin","wv","wy","wyom","york"],"components/SkillCheckComponent.html":["0","1","2","3","4","advantag","advantage.advantag","advantage.disadvantag","advantage.non","advantageadvantag","advantagedisadvantag","advantageenum","advantagenon","advantageopt","allow","angular/common","angular/cor","angular/form","angular/material/button","angular/material/card","angular/material/input","angular/material/select","app","attempt","attemptsopt","bonu","boolean","calc","calcul","calculations.servic","chanc","check","check.component.html","check.component.scss","check.component.t","check/skil","class","commonmodul","compon","componentref","console.log('skil","console.log('t","console.log(skillchecksuccessch","construct","constructor","convert","createtablecomponent(tableinput","currentadvantagevalu","d10","d12","d4","d6","d8","dc","descript","dice","dicebonusformcompon","dicecalcservic","dicecalculationsservic","diceresult","dicerollresult","diceset","diceset(diedict","diceset.target.tostr","diceseti","dict","die","diebonus","diebonusform","diedict","diedict['advantag","diedict['attempt","diedict['d20","diedict['target","dierollresultstablecompon","disadvantag","display","document.getelementbyid('success","document.getelementbyid('target","easi","export","file","form","form.compon","form/dic","formcontrol","formcontrol(0","formcontrol(1","formcontrol(advantage.non","formgroup","frontend","gener","generatediceset","group","id","if(successel","if(tableinput","if(targetdcel","implement","import","info","inform","inject","inject(dicecalculationsservic","input","isadvantagenone(currentadvantagevalu","json.pars","json.stringify(this.skillcheckform.value))['diebonus","line","matbuttonmodul","matbuttontogglemodul","matcardmodul","match","matinputmodul","matselectmodul","metadata","method","name","new","ngoninit","none","null","onc","oninit","paramet","previou","properti","reactiveformsmodul","read","recreat","result","return","roll","selector","set","signal","skill","skillcheckcompon","skillcheckform","skillchecksubmit","skillchecksuccessch","skillchecksuccesschance).tostr","sourc","src/app/skil","standalon","styleurl","submit","succe","succeed.it","successel","successelement.innerhtml","table.compon","table/di","tableinput","tableref","targetdc","targetdcel","targetdcelement.innerhtml","templateurl","this.#tableref","this.#tableref?.setinput('diceresult","this.createtablecompon","this.createtablecomponent(dicerollresult","this.dicecalcservice.dicecalcresults(diceset","this.dicecalcservice.skillcheckcalc(diceset","this.generatediceset","this.skillcheckform.valu","this.skillcheckform.value.advantag","this.skillcheckform.value.attempt","this.skillcheckform.value.targetdc","this.skillcheckform.valuechanges.subscrib","this.skillchecksubmit","this.vcr()?.clear","this.vcr()?.createcomponent(dierollresultstablecompon","toggl","true","typeof","undefin","undefined=undefin","user","valid","validators.min(0","validators.min(1","validators.requir","valu","vcr","viewchild","viewchild('tablecontain","viewcontainerref","void"],"components/StepperComponent.html":["0","1","9pdf6ttr0j7hmkk_7t6xtpun","angular","angular/cor","angular/form","angular/material/button","angular/material/form","angular/material/icon","angularhttps://www.youtube.com/watch?v=xtcjqawij2c&list=plw5h0dij","app","case","chang","class","compon","control","controlguid","controlvalueaccessor","custom","decrement","default","descript","dice","export","field","file","form","formcontrol","formsmodul","forwardref","found","guid","here","https://flowbite.com/docs/forms/numb","https://v5.material.angular.io/guide/cr","https://www.youtube.com/watch?v=xtcjqawij2c&list=plw5h0dij","implement","import","increment","info","input","make","matbuttonmodul","match","matformfieldmodul","maticonmodul","metadata","method","mind","minu","modifi","multi","ng_value_accessor","null","number","on","onchang","onchange(valu","ontouch","plu","properti","provid","result","return","selector","side","sign","sourc","src/app/stepper/stepper.component.t","stepper","stepper.component.html","stepper.component.scss","steppercompon","style","styleurl","templateurl","th","this.updatevalue(this.valu","this.valu","true","updatevalu","updatevalue(newvalu","us","useexist","valu","valueth","void","want"],"injectables/DiceCalculationsService.html":["0","01","0];sums2","1","10","100","11","12","13","14","15","16","17","18","19","2","20","2d","3","3]]the","4","5","6","7","8","9","95","accept","account","ad","add","addit","adjust","adjustprobabilityforattempt","adjustprobabilityforattempts(likelihoodtarget","advantag","advantage.advantag","advantage.disadvantag","advantage.it'","advantage.non","advantage.savageattack","advantage/disadvantag","algorithm","alreadi","amount","angular/cor","appli","array","arraydiceresult","assum","attack","attempt","automatically,bas","be","befor","between","break","calc","calcul","calculations.service.t","call","case","chanc","check","checkadvantagevalu","checkadvantagevalue(advantag","choos","class","code","compon","console.log","console.log('dic","console.log('excecut","console.log(`adjust","console.log(`advantag","console.log(`disadvantag","constant","contain","convert","copi","covnert","creat","cumpercentageresult","cumulativepercentagetot","current","currentdievalu","currentsum","d12","d20","d4","data","dc","decim","default","defaultd20rollresult","deicmal","denomen","descript","determin","dice","dicecalc","dicecalcmap","dicecalcmap(diceset","dicecalcmapadvantag","dicecalcmapadvantage(diceset","dicecalcmapsetupchoosedic","dicecalcmapsetupchoosedice(dicevalue1","dicecalcmapsetuppossiblevalu","dicecalcmapsetuppossiblevalues(possiblevalu","dicecalcresult","dicecalcresults(diceset","dicecalculationsservic","dicefac","diceresult","diceset","diceset.advantag","diceset.attempt","diceset.modifi","diceset.target","diceseteg","diceseti","dicesetstr","dicesetstring(diceset","dicesum","dicevalue1","dicevalue2","die","diefac","dieindex","dieresult","dieresults.push","dierol","dievalu","differ","digit","disadvantag","display","divid","each","empti","end","enough","enum","except","explan","export","file","filter","final","finalsum","finalsums.get(modi","finalsums.set(modi","first","for(let","fraction","fractionabovetarget","full","function","gener","get","group","highest","hit","hold","i[0","i[1","if(dicevalue1","if(nextdicev","if(targetch","if(this.maxroll(diceset","if(this.minroll(diceset","if(this.topercentagedefault(numrol","import","improperli","info","inform","ing","initi","inject","input","interfac","interfaceperform","invok","it'","iter","larg","likelihoodtarget","list","look","loop","lowest","main","make","map","map.foreach((numrol","map[rol","match","math.max(dicevalue1","math.min(dicevalue1","max","maxrol","maxroll(diceset","method","min","min/max","minrol","minroll(diceset","modi","modif","modifi","multipl","multipli","natur","need","new","next","nextdicev","null","number","number.default","numdecimalspac","numdigitsafterdot","numpossibledierol","numpossibledierolls(diceset","numpossiblerol","numresult","numrol","numrollsabovetarget","o(n^3","object","on","onc","option","over","param","paramet","percent","percentag","percentage.thi","percentageresult","perform","permut","point","possibl","possibledicevalu","possibledicevalues(diceset","possiblevalu","possiblevalues.entri","possiblevalues.flatmap","possiblevalues.push","possiblevalues.revers","printdiceset","printdiceset(diceset","probabl","properli","providedin","push","raw","reach","relat","repres","requir","result","results.thi","return","rol","roll","rolled,and","rollresult","rolls.most","rollsther","rollto","root","round","savag","second","separ","servic","set","simplifi","skill","skillcheck","skillcheckcalc","skillcheckcalc(diceset","skillcheckcalcadvantag","skillcheckcalcadvantage(targetch","skillcheckcalcadvantagedisadvantag","skillcheckcalcadvantagedisadvantage(advantag","skillcheckcalcdisadvantag","skillcheckcalcdisadvantage(targetch","skillcheckcalcmodifi","skillcheckcalcmodifiers(diceset","someth","sourc","space","src/app/dic","start","stay","store","string","succeed","success","sum","sums1","sums2","sums2.push(currentdievalu","sums2.push(currentsum","sums2.push(nextdicev","sums2.slic","sums2.sums1","sure","switch(advantag","tabl","take","target","target).length","targetch","test","thepercentag","theposs","third","this.adjustprobabilityforattempt","this.dicecalcmap(diceset","this.dicecalcmapadvantage(diceset","this.dicecalcmapsetupchoosedic","this.dicecalcmapsetuppossiblevalu","this.numpossibledierolls(diceset","this.possibledicevalues(diceset","this.skillcheckcalcadvantage(targetch","this.skillcheckcalcadvantagedisadvantag","this.skillcheckcalcdisadvantage(targetch","this.skillcheckcalcmodifiers(diceset","this.topercentage(cumulativepercentagetot","this.topercentage(numrol","this.topercentagedefault","this.topercentagedefault(numrol","those","through","time","topercentag","topercentage(decim","topercentagedefault","topercentagedefault(decim","total","totalrol","totalrolls)[0","totalrolls)[1","transform","two","type","us","user","valu","variabl","variat","void","whether","whole","x","you'r"],"injectables/SpellsService.html":["0","6th","addit","angular/common/http","angular/cor","api","attempt","base","boolean","call","catch(","class","console.log('pip","constructor","constructor(http","contain","creat","damag","data","descript","dnd","dnd5eapi","each","export","file","filter","function","getallspel","getallspellsoflevel","getallspellsoflevel(level","getspel","getspell(url","give","given","hold","http","httpclient","https://jsonplaceholder.typicode.com","https://www.dnd5eapi.co/api","https://www.dnd5eapi.co/apiapi","if(spelllevel","import","info","inform","inject","input","level","levelth","list","main","make","map","match","method","modifi","modifier=0","name","necessari","need","new","number","observ","order","param","paramet","pipe(map((respons","properli","properti","protect","providedin","request","respons","response['damage']['damage_at_character_level']['1","response['damage']['damage_at_slot_level","response['heal_at_slot_level","response['level","response['nam","result","return","root","rxj","search","separ","servic","set","sourc","specif","spell","spell(spellnam","spell.setdamagefromapi","spell.thi","spelli","spelllevel","spellnam","spellrespons","spellresponse.result","spellresponseresult","spellslist","spellsservic","src/app/spells.service.t","string","subscrib","test","this.http","this.http.get","this.url.href}/spells?level=${level","this.url.href}/spells?level=0&level=1&level=2&level=3&level=4&level=5&level=6","this.url.origin}${url","tri","type","unknown","up","url","url('https://www.dnd5eapi.co/api","url.dnd","us","user","valu"],"classes/DiceSet.html":["0","1","10","12","20","4","6","8","ad","advantag","advantage.non","attempt","boolean","calcul","calculations.serivce.t","chanc","check","class","constructor","constructor(undefin","creat","cumpercentageresult","current","d10","d12","d20","d4","d6","d8","data","default","describ","descript","dice","diceresult","dicerol","diceset","diceseti","dicesetidiceset","dicestr","equal","export","extend","file","gener","higher","hold","implement","info","interfac","iter","key","match","method","modifi","next","num","number","numresult","percent","percentag","percentageresult","possibl","privat","properti","result","return","roll","rollresult","set","skill","sourc","src/app/diceset.t","string","suppos","symbol.iter","target","this.d10","this.d12","this.d20","this.d4","this.d6","this.d8","this.key","time","togeth","tostr","total","type","us","valu","variabl"],"classes/Spell.html":["0","addit","allow","api","base","class","console.log('damag","constructor","constructor(nam","count","damag","damage={0","data","descript","diceset","diceseti","dnd","each","easier","export","file","for(let","function","gener","hold","https://transform.tools/json","https://www.dnd5eapi.co/api/spel","implement","import","index","individu","info","inform","interfac","key","level","level=1","match","method","modifi","name","necessari","new","number","parseint(key","properti","respons","response[key","result","retstr","return","set","setdamagefromapi","setdamagefromapi(respons","sourc","spell","spelli","spellrespons","spellresponseresult","src/app/spell.t","store","string","this.damag","this.damage[1","this.damage[key]}\\n","this.damage[parseint(key","this.level","this.nam","this.url","this.url}\\n","tostr","type","typescript","url","us","valu","variabl","version","void"],"interfaces/CharacterStats.html":["barbarian","bard","characterclass","characterstat","charisma","cleric","constitut","dexter","druid","enum","export","fighter","file","info","intellig","interfac","level","match","monk","number","paladin","profici","properti","ranger","result","rogu","sorcer","sourc","src/app/characterstats.t","strength","type","warlock","wisdom","wizard"],"interfaces/DiceResults.html":["0","1","10","12","20","4","6","8","ad","advantag","advantage.non","attempt","calcul","calculations.serivce.t","chanc","check","class","creat","cumpercentageresult","current","d10","d12","d20","d4","d6","d8","data","default","describ","descript","dice","diceresult","dicerol","diceset","diceseti","equal","export","extend","file","gener","higher","hold","implement","info","interfac","iter","key","match","modifi","next","number","numresult","percent","percentag","percentageresult","possibl","privat","properti","result","return","roll","rollresult","set","skill","sourc","src/app/diceset.t","suppos","symbol.iter","target","this.d10","this.d12","this.d20","this.d4","this.d6","this.d8","this.key","time","togeth","total","type","us","valu","variabl"],"interfaces/DiceSetI.html":["0","1","10","12","20","4","6","8","ad","advantag","advantage.non","array","attempt","calcul","calculations.serivce.t","calculations.service.t","chanc","check","class","creat","cumpercentageresult","current","d10","d10num","d12","d12num","d20","d20num]thi","d4","d4num","d6","d6num","d8","d8num","data","default","describ","descript","dice","diceresult","dicerol","diceset","diceseti","dieiter","differ","each","equal","export","extend","file","gener","higher","hold","implement","info","inform","interfac","iter","key","mani","match","modifi","next","number","numresult","percent","percentag","percentageresult","possibl","privat","properti","result","return","roll","rollresult","set","skill","sourc","src/app/diceset.t","suppos","symbol.iter","target","this.d10","this.d12","this.d20","this.d4","this.d6","this.d8","this.key","time","togeth","total","type","us","valu","values:[4","variabl"],"interfaces/DropdownGroup.html":["dropdowngroup","dropdownitem","export","file","group","groupnam","info","interfac","label","match","properti","result","sourc","src/app/dropdown.t","string","type","valu"],"interfaces/DropdownItem.html":["dropdowngroup","dropdownitem","export","file","group","groupnam","info","interfac","label","match","properti","result","sourc","src/app/dropdown.t","string","type","valu"],"interfaces/SpellI.html":["addit","allow","api","base","class","console.log('damag","constructor(nam","count","damag","damage={0","data","descript","diceset","diceseti","dnd","each","easier","export","file","for(let","function","gener","hold","https://transform.tools/json","https://www.dnd5eapi.co/api/spel","implement","import","index","individu","info","inform","interfac","key","level","level=1","match","modifi","name","necessari","new","number","parseint(key","properti","respons","response[key","result","retstr","return","set","setdamagefromapi(respons","sourc","spell","spelli","spellrespons","spellresponseresult","src/app/spell.t","store","string","this.damag","this.damage[1","this.damage[key]}\\n","this.damage[parseint(key","this.level","this.nam","this.url","this.url}\\n","tostr","type","typescript","url","us","valu","variabl","version"],"interfaces/SpellResponse.html":["addit","allow","api","base","class","console.log('damag","constructor(nam","count","damag","damage={0","data","descript","diceset","diceseti","dnd","each","easier","export","file","for(let","function","gener","hold","https://transform.tools/json","https://www.dnd5eapi.co/api/spel","implement","import","index","individu","info","inform","interfac","key","level","level=1","match","modifi","name","necessari","new","number","parseint(key","properti","respons","response[key","result","retstr","return","set","setdamagefromapi(respons","sourc","spell","spelli","spellrespons","spellresponseresult","src/app/spell.t","store","string","this.damag","this.damage[1","this.damage[key]}\\n","this.damage[parseint(key","this.level","this.nam","this.url","this.url}\\n","tostr","type","typescript","typescriptbas","url","us","valu","variabl","version"],"interfaces/SpellResponseResults.html":["addit","allow","api","base","class","console.log('damag","constructor(nam","count","damag","damage={0","data","descript","diceset","diceseti","dnd","each","easier","export","file","for(let","function","gener","hold","https://transform.tools/json","https://www.dnd5eapi.co/api/spel","https://www.dnd5eapi.co/api/spellsdata","implement","import","index","individu","info","inform","interfac","key","level","level=1","match","modifi","name","necessari","new","number","parseint(key","properti","respons","response[key","result","retstr","return","set","setdamagefromapi(respons","sourc","spell","spelli","spellrespons","spellresponseresult","src/app/spell.t","store","string","this.damag","this.damage[1","this.damage[key]}\\n","this.damage[parseint(key","this.level","this.nam","this.url","this.url}\\n","tostr","type","typescript","url","us","valu","variabl","version"],"miscellaneous.html":["appconfig","match","miscellan","mockspellrespons","mockspellresult0","mockspellresult1","result","variabl"],"coverage.html":["0","0/1","0/19","0/2","0/3","0/4","0/6","0/8","1/10","1/2","1/4","1/5","1/7","10","100","14","15","17/21","2/7","20","25","28","4/4","50","80","appcompon","attackrollscompon","bonu","calculations.service.t","charactersheetcompon","characterstat","check.component.t","check/skil","class","compon","coverag","dicebonusformcompon","dicecalculationsservic","diceresult","diceset","diceseti","dierollresultstablecompon","document","dropdowngroup","dropdownitem","file","form.component.t","form/dic","found.component.t","found/not","identifi","inject","interfac","match","navbarcompon","notfoundcompon","overlaycompon","project","result","roll","rolls.component.t","rolls/attack","sheet.component.t","sheet/charact","skillcheckcompon","spell","spelli","spellrespons","spellresponseresult","spellsservic","src/app/app.component.t","src/app/attack","src/app/charact","src/app/characterstats.t","src/app/di","src/app/dic","src/app/diceset.t","src/app/dropdown.t","src/app/navbar/navbar.component.t","src/app/not","src/app/overlay/overlay.component.t","src/app/skil","src/app/spell.t","src/app/spells.service.t","src/app/stepper/stepper.component.t","statement","steppercompon","table.component.t","table/di","type"]},"length":27},"tokenStore":{"root":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}},"1":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.03125},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.025},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.006263982102908278},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.03914590747330961},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.036},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.03260869565217391},"coverage.html":{"ref":"coverage.html","tf":0.0851063829787234}},"]":{"docs":{},";":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"docs":{}}}}}}},"/":{"1":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.014184397163120567}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02127659574468085}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.014184397163120567}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.014184397163120567}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"docs":{}}},"1":{"0":{"0":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203},"coverage.html":{"ref":"coverage.html","tf":0.02127659574468085}}},"1":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}}},"2":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203}}},"3":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"4":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"5":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"6":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"7":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"/":{"2":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"docs":{}},"docs":{}}},"8":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"9":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.012422360248447204},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.03125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.05145413870246085},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02127659574468085}}},"docs":{}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"docs":{}}},"2":{"0":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.1},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.04519015659955257}},"d":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}},"/":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"docs":{}}},"3":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.02774049217002237}},"]":{"docs":{},"]":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}},"4":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0174496644295302},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"/":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"docs":{}}},"5":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.012527964205816556}}},"6":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.006263982102908278},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203}},"t":{"docs":{},"h":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}},"7":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0044742729306487695}}},"8":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0022371364653243847},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203}}},"9":{"5":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}},"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}},"p":{"docs":{},"d":{"docs":{},"f":{"6":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"0":{"docs":{},"j":{"7":{"docs":{},"h":{"docs":{},"m":{"docs":{},"k":{"docs":{},"k":{"docs":{},"_":{"7":{"docs":{},"t":{"6":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"n":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}}}}}}}},"docs":{}}},"docs":{}}}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}},"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}},"p":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0044742729306487695}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.014423076923076924}}}}}}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.016},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203}},"d":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0035794183445190158}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"2":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.008021390374331552}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0035794183445190158},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.018633540372670808},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.01923937360178971},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.02491103202846975},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.016},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.028985507246376812}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.012422360248447204},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}},"i":{"docs":{},"t":{"docs":{},"'":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0071588366890380315}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.009316770186335404},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}},"b":{"docs":{},"g":{"3":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}},"docs":{}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}}}}}}},"d":{"docs":{},"k":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}},"t":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"b":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"?":{"docs":{},"v":{"docs":{},"=":{"docs":{},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{},"j":{"docs":{},"q":{"docs":{},"a":{"docs":{},"w":{"docs":{},"i":{"docs":{},"j":{"2":{"docs":{},"c":{"docs":{},"&":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"=":{"docs":{},"p":{"docs":{},"l":{"docs":{},"w":{"5":{"docs":{},"h":{"0":{"docs":{},"d":{"docs":{},"i":{"docs":{},"j":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.014423076923076924},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.029490616621983913},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.014563106796116505},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.010582010582010581}}},"p":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.05},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.05714285714285714},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.019417475728155},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.14285714285714285}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561}}}}},"l":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.017857142857142856},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":5.004464285714286},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0058165548098434005},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.014234875444839857},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.014492753623188406}},"s":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}},"r":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.01029082774049217},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"(":{"6":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}},"7":{"docs":{},")":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}},"k":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}},"b":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.16042780748663102}}}}}}}},"k":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"z":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.03765690376569038},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"coverage.html":{"ref":"coverage.html","tf":0.014184397163120567}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.021352313167259787}}}}}}},"t":{"docs":{},"h":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.05813953488372093}}}}}}}}}}}}}}}}},"g":{"3":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338}}},"docs":{}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}},"r":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}}}}},"d":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805}}}}}},"e":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.009395973154362415}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}},"c":{"7":{"7":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}}}}}}},"docs":{}},"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"l":{"docs":{},"c":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.006711409395973154}},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.028846153846153848},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.004026845637583893},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.014492753623188406}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.0160857908847185}}},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877}}}}}}}},"s":{"docs":{},"e":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0058165548098434005}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.014423076923076924},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.021739130434782608},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.005369127516778523},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0022371364653243847}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.008928571428571428},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}}},"c":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.01951219512195122},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.011185682326621925},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.125}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":5.05},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":5.023529411764706},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.03529411764705882}}}}}}}},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}},"o":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232},"overview.html":{"ref":"overview.html","tf":0.05},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.087378640776699},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":5.011160714285714},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":5.075},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":5.0418410041841},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":5.024390243902439},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":5.034883720930233},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":5.085714285714285},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":5.008021390374331},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":5.015527950310559},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":5.01875},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"coverage.html":{"ref":"coverage.html","tf":0.07092198581560284}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.012422360248447204}}}}},"t":{"docs":{},"h":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.010723860589812333}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.016736401673640166}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}}}}}},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.010582010582010581}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}},"`":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"o":{"docs":{},"r":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345}},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.03529411764705882}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0058165548098434005}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"d":{"docs":{},"e":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}},"p":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}},"v":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.00709219858156}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.017341040462427744},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.01875}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.008928571428571428}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}}}}}}}}}}},"m":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":5.0213523131672595},"classes/Spell.html":{"ref":"classes/Spell.html","tf":5.009708737864078},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.010869565217391304},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291},"coverage.html":{"ref":"coverage.html","tf":0.014184397163120567}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0044742729306487695},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.010723860589812333},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}},"t":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}},"d":{"1":{"0":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.016736401673640166},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.017793594306049824},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.014492753623188406}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}},"2":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.016736401673640166},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.017793594306049824},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.014492753623188406}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}},"docs":{}},"2":{"0":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0058165548098434005},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.017793594306049824},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.014492753623188406}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"]":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}}}}}},"docs":{}},"4":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.016736401673640166},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.017793594306049824},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.014492753623188406}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}},"6":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.016736401673640166},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.017793594306049824},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.014492753623188406}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}},"8":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.016736401673640166},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.017793594306049824},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.014492753623188406}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}},"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.03398058252427184},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.03208556149732621},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.023121387283236993},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.021164021164021163}},"e":{"docs":{},"=":{"docs":{},"{":{"0":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}},"docs":{}}}}}}},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.02403846153846154},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.010723860589812333},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.010676156583629894},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.019417475728155338},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.010869565217391304},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.016042780748663103},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.023121387283236993},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}}}},"k":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877}}}}}}},"e":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0044742729306487695}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.01875}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.014423076923076924}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}},"b":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0035794183445190158}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.004026845637583893},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.017793594306049824},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"d":{"2":{"0":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"l":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}},"i":{"docs":{},"c":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.03529411764705882}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.04807692307692308},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.04602510460251046},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.014634146341463415},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.018633540372670808},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.022818791946308724},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.021352313167259787},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.032},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.036231884057971016}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.008928571428571428},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.018633540372670808},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.018344519015659956},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":5.032028469750889},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.024271844660194174},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.036},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.028985507246376812},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0213903743315508},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.023121387283236993},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.021164021164021163},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.003131991051454139}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}}}}}},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}},"i":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.008948545861297539},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.017793594306049824},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.019417475728155338},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.024},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":5.021739130434782},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.026737967914438502},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.017341040462427744},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285}}}}}}}}}},",":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805}}}}},"e":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0035794183445190158}}}},"t":{"docs":{},"r":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642}}}}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":5.00836820083682},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.009316770186335404}}}}}}}},"u":{"docs":{},"l":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.014634146341463415}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.009316770186335404},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":5.00089485458613},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0022371364653243847}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.024390243902439025},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.006263982102908278},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":5.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}},"o":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0022371364653243847}}},"2":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.004026845637583893}}},"docs":{}}}}}}},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.024390243902439025},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.011185682326621925}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"[":{"docs":{},"'":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}},"d":{"2":{"0":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}},"docs":{}},"docs":{}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":5.009756097560976},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.01951219512195122}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0044742729306487695}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}},"n":{"docs":{},"d":{"5":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}}},"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.013404825737265416},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}},",":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":5.0588235294117645},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.03125},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.11764705882352941},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":5.09375},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}}},"c":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.016042780748663103},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}}}},"s":{"docs":{},"i":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.010676156583629894},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.019417475728155338},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.023529411764705882},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.010869565217391304},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.058823529411764705},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.0625},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0213903743315508},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.023121387283236993},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.021164021164021163}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}},"n":{"docs":{},"d":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}},"u":{"docs":{},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.010869565217391304}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.004026845637583893}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"l":{"docs":{},"e":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.029411764705882353},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.03125},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.01875}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.02403846153846154},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.016736401673640166},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.009316770186335404},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.008928571428571428},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.04602510460251046},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}},"(":{"0":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.02510460251046025},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.018633540372670808}}},"1":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}},"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"?":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.012552301255230125},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.009316770186335404}}}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877}}}}}}},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}}}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.005369127516778523},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.010582010582010581}}}}}},"k":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.05714285714285714},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.05714285714285714}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857}}}}}},"t":{"docs":{"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602}}}}}}}},"e":{"docs":{},"e":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.005369127516778523}},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.014423076923076924},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0071588366890380315},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.0160857908847185},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877}}}}},"b":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.008021390374331552}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"l":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"m":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232}}}}}},"v":{"docs":{},"e":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}},"n":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.009843400447427294},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.017341040462427744},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.013404825737265416}},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.00804289544235925}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.00804289544235925}},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"u":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"a":{"docs":{},"m":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}},"i":{"docs":{},"d":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.08823529411764706},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.03125}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.08823529411764706},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.03125}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}},"r":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"r":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.008021390374331552}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.01875}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.02403846153846154},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}},"m":{"docs":{},"e":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.021447721179624665}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.017341040462427744},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"d":{"docs":{},"n":{"docs":{},"d":{"5":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}},"/":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.017341040462427744},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.010582010582010581}},"l":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"b":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"?":{"docs":{},"v":{"docs":{},"=":{"docs":{},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{},"j":{"docs":{},"q":{"docs":{},"a":{"docs":{},"w":{"docs":{},"i":{"docs":{},"j":{"2":{"docs":{},"c":{"docs":{},"&":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"=":{"docs":{},"p":{"docs":{},"l":{"docs":{},"w":{"5":{"docs":{},"h":{"0":{"docs":{},"d":{"docs":{},"i":{"docs":{},"j":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"5":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.0160857908847185}}}}}}}}}}},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}},"s":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.017793594306049824},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.010869565217391304},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.07766990291262135},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.03571428571428571},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.05},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.02092050209205021},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.02926829268292683},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.12790697674418605},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.05714285714285714},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0213903743315508},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.040372670807453416},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.03125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.010723860589812333},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.010582010582010581}}}}}}}},"f":{"docs":{},"o":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.00804289544235925},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.029411764705882353},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.03125},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.010723860589812333},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.016042780748663103},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.012552301255230125},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.014634146341463415},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.006263982102908278},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}},"(":{"docs":{},"{":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":5.001342281879195},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":5.013404825737266},"coverage.html":{"ref":"coverage.html","tf":0.014184397163120567}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083}}}}}}}}}}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.010676156583629894},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.019417475728155338},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":5.023529411764706},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":5.02},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":5.018115942028985},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":5.088235294117647},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":5.09375},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":5.032085561497326},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":5.028901734104046},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":5.026455026455026},"coverage.html":{"ref":"coverage.html","tf":0.05673758865248227}},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.03529411764705882}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.01875}}}}}}}}},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}},"f":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}},"c":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"docs":{}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.03488372093023256}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0106951871657754}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"d":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.009316770186335404}},"a":{"docs":{},"h":{"docs":{},"o":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}},"l":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"o":{"docs":{},"w":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}},"[":{"0":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}},"1":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}}},"docs":{}},"t":{"docs":{},"'":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"e":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.008948545861297539},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.014234875444839857},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.010869565217391304}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"y":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.014234875444839857},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.014563106796116505},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.016042780748663103},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.017341040462427744},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}}}},"s":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"y":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}},"l":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.029411764705882353},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.09375}}}}},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}},"r":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.014423076923076924}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.021447721179624665}}}},"n":{"docs":{},"k":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.008928571428571428}}},"e":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}},"o":{"docs":{},"k":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805}}}}}}}},"p":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.005369127516778523}}}},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.021447721179624665},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.05825242718446602},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.03529411764705882},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.058823529411764705},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.04046242774566474},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.047619047619047616}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571}}}}},"t":{"docs":{},"h":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}},"=":{"1":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}},"docs":{}}}}}}},"m":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.0160857908847185}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616},"overview.html":{"ref":"overview.html","tf":0.1},"modules.html":{"ref":"modules.html","tf":0.4},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.05},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.05714285714285714},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.023529411764705882},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.058823529411764705},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.0625},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.010582010582010581},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.14285714285714285},"coverage.html":{"ref":"coverage.html","tf":0.014184397163120567}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}}}}},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}}}}}}}}}}},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"docs":{}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"docs":{}}}}}}}}}}}}}}}}},"p":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.007606263982102908},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}}}}}}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}}}},"x":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"y":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}},"o":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":10.2}}}},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"f":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"i":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.008053691275167786},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.021447721179624665},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.017793594306049824},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.019417475728155338},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.014492753623188406},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.016042780748663103},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.017341040462427744},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}},"e":{"docs":{},"r":{"docs":{},"=":{"0":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}},"docs":{}}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"k":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.14285714285714285}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"0":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.14285714285714285}}},"1":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.14285714285714285}}},"docs":{}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345}}}}}},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"d":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}}},"u":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.071428571428571}}}}}}}}}},"d":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"h":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"n":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"p":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"s":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"t":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}},"p":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}},"n":{"docs":{},"e":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}}}}}}},"w":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.015625},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.029288702928870293},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0106951871657754},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.037267080745341616},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.010723860589812333},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.010582010582010581}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"v":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"e":{"docs":{},"d":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}},"x":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372}},"i":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":5.023255813953488},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.16042780748663102},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.009316770186335404},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.03398058252427184},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0374331550802139},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.028901734104046242},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.037037037037037035}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.02092050209205021},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0375},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.042058165548098436},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.013404825737265416},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.17437722419928825},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.05339805825242718},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.2823529411764706},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.16},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.16304347826086957},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.058823529411764705},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.05202312138728324},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.047619047619047616}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}}},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}},"l":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0213903743315508},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.025},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}},"o":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":5.057142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877}},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"n":{"docs":{},"e":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}},"c":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"d":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"h":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"j":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"m":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"v":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"y":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.014423076923076924},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561}}}}},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.05}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":5.005347593582887},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.022321428571428572},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.02680965147453083}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}},"n":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.008021390374331552}}}}}}}},"c":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.01875}}}}}}}},"h":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"i":{"docs":{},"o":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}},"k":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"l":{"docs":{},"a":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"^":{"3":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}},"docs":{}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}},"p":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.019230769230769232},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.038834951456310676}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.009395973154362415},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.010723860589812333}},"e":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.008501118568232663},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.00804289544235925}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.012552301255230125}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.012552301255230125}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"u":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}},"u":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.01951219512195122},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.006263982102908278},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0022371364653243847}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0058165548098434005}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}}}}}},"r":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}},"t":{"docs":{},"i":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.029411764705882353},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.03125},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.008053691275167786}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.03529411764705882}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.06276150627615062}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"s":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"a":{"docs":{},"g":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.03902439024390244},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.006711409395973154},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}},"n":{"docs":{},"n":{"docs":{},"s":{"docs":{},"y":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}},"w":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602}}}}}}}}}}}}}}}},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02403846153846154},"overview.html":{"ref":"overview.html","tf":0.1},"modules.html":{"ref":"modules.html","tf":0.4},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.008928571428571428},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.05},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.08780487804878048},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.05714285714285714},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.018633540372670808},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.009395973154362415},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.014234875444839857},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.019417475728155338},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.023529411764705882},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.024},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.014492753623188406},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.058823529411764705},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.0625},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0213903743315508},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.03468208092485549},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.026455026455026454},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.14285714285714285},"coverage.html":{"ref":"coverage.html","tf":0.028368794326241134}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}}}}}}}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.014563106796116505},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.016042780748663103},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.023121387283236993},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}},"[":{"docs":{},"'":{"docs":{},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"'":{"docs":{},"]":{"docs":{},"[":{"docs":{},"'":{"docs":{},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"'":{"docs":{},"]":{"docs":{},"[":{"docs":{},"'":{"1":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}},"docs":{}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.013392857142857142},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.02510460251046025},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.009316770186335404},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.03125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.02774049217002237},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.03753351206434316},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.010676156583629894},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.019417475728155338},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.019417475728155338},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0213903743315508},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.023121387283236993},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.021164021164021163}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0013422818791946308}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.010723860589812333}}}}}}}},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.03365384615384615},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.017857142857142856},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.14146341463414633},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.030425055928411632},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.02491103202846975},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.056},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.028985507246376812},"coverage.html":{"ref":"coverage.html","tf":0.014184397163120567}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}},"/":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}},",":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805}}}}},"t":{"docs":{},"h":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.021352313167259787},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.052},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.021739130434782608}}}}}}}},"t":{"docs":{},"o":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}},"o":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669}},",":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}},"w":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561}}},"g":{"docs":{},"u":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}},"a":{"docs":{},"w":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}}}},"x":{"docs":{},"j":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"c":{"docs":{},"o":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}},"o":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.05},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.05714285714285714},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.008928571428571428}},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}}}}},"?":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.029288702928870293},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.006711409395973154},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.010723860589812333},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.003131991051454139}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.05}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.05}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025}}}}}},"t":{"docs":{"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}},"g":{"docs":{},"n":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}},"a":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.014423076923076924},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.021739130434782608},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0044742729306487695},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.009395973154362415}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":5.0062111801242235},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.014423076923076924},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.03794642857142857},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.08310991957104558},"classes/Spell.html":{"ref":"classes/Spell.html","tf":5.019417475728155},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0213903743315508},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.017341040462427744},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.021164021164021163},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}},"h":{"docs":{},"i":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"]":{"docs":{},".":{"docs":{},"d":{"1":{"0":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}},"2":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}},"docs":{}},"4":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}},"6":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}},"8":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}},"docs":{}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.00804289544235925}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571}},"?":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.013392857142857142},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":5.005361930294906},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}},"t":{"docs":{},"r":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"?":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.00804289544235925}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.01876675603217158},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.019417475728155338},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":5.021390374331551},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.017341040462427744},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.00804289544235925},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":5.011560693641618},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.023121387283236993},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":5.015873015873016},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.02926829268292683},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.010723860589812333}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}}}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":5.01875},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}},"r":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}}}}}}},"t":{"docs":{},"e":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.013368983957219251}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}},"y":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.008928571428571428},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.0160857908847185},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0825242718446602},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.11764705882352941},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.125},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0748663101604278},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.057803468208092484},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.08465608465608465}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.03529411764705882}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.010582010582010581}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.0160857908847185}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}},"c":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}},"c":{"docs":{},"e":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"e":{"docs":{},"d":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}},".":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}},"s":{"docs":{},"s":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616}},"e":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05}}}},"s":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203}}}}}},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.005369127516778523}},"s":{"1":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.01923937360178971}}},"2":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.014317673378076063}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"docs":{}}}}}}},"docs":{}}},"r":{"docs":{},"e":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.029411764705882353},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.03125},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}},"t":{"docs":{},"h":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}},"c":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"coverage.html":{"ref":"coverage.html","tf":0.014184397163120567}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"coverage.html":{"ref":"coverage.html","tf":0.02127659574468085}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.029411764705882353},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.03125},"coverage.html":{"ref":"coverage.html","tf":0.014184397163120567}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"/":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291},"coverage.html":{"ref":"coverage.html","tf":0.028368794326241134}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}},"v":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}}},"c":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"d":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.02926829268292683},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}},"f":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.009316770186335404}}}}},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.010738255033557046},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.017793594306049824},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.021739130434782608}},"d":{"docs":{},"c":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"e":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.006711409395973154}}}}}}}},"k":{"docs":{},"e":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.019417475728155338},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.05},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.023255813953488372},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.05714285714285714},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"x":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}},"u":{"docs":{},"e":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/CharacterSheetComponent.html":{"ref":"components/CharacterSheetComponent.html","tf":0.025},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.012552301255230125},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186},"components/NotFoundComponent.html":{"ref":"components/NotFoundComponent.html","tf":0.02857142857142857},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.014423076923076924},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.021447721179624665},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.010676156583629894},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.019417475728155338},"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.09411764705882353},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.028},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.050724637681159424},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.058823529411764705},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.0625},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0374331550802139},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.03468208092485549},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.042328042328042326},"coverage.html":{"ref":"coverage.html","tf":0.0070921985815602835}},"=":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}},"o":{"docs":{},"f":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.02912621359223301}}}},"m":{"docs":{},"e":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}},"h":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"#":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"?":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"'":{"docs":{},")":{"docs":{},"!":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"'":{"docs":{},")":{"docs":{},"!":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}},"e":{"docs":{},"[":{"0":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}},"docs":{}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"1":{"0":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}},"2":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}},"docs":{}},"2":{"0":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}},"docs":{}},"4":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}},"6":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}},"8":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}},"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"1":{"0":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}},"2":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}},"docs":{}},"4":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}},"6":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}},"8":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714}}},"docs":{}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"d":{"2":{"0":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.010582010582010581}},"e":{"docs":{},"[":{"1":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}},"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{},"}":{"docs":{},"\\":{"docs":{},"n":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}},"l":{"docs":{},"?":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"]":{"docs":{},".":{"docs":{},"d":{"1":{"0":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}},"2":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}},"docs":{}},"4":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}},"6":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}},"8":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"c":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"c":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"?":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.03125}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"?":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"1":{"0":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}},"'":{"docs":{},")":{"docs":{},"?":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}},"'":{"docs":{},")":{"docs":{},"?":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"4":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}},"'":{"docs":{},")":{"docs":{},"?":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}},"6":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}},"'":{"docs":{},")":{"docs":{},"?":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}},"8":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}},"'":{"docs":{},")":{"docs":{},"?":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.0041841004184100415}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}},".":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"}":{"docs":{},"/":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"?":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"=":{"0":{"docs":{},"&":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"=":{"1":{"docs":{},"&":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"=":{"2":{"docs":{},"&":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"=":{"3":{"docs":{},"&":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"=":{"4":{"docs":{},"&":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"=":{"5":{"docs":{},"&":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"=":{"6":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{},"$":{"docs":{},"{":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}}}}}}}}}},"}":{"docs":{},"\\":{"docs":{},"n":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0106951871657754},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.010582010582010581}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}}},"r":{"docs":{},"d":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079}}}}},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.005369127516778523}}}}}}}},"n":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"x":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.016},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.007246376811594203}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0026845637583892616},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0035587188612099642},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.008},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0022371364653243847}},"l":{"docs":{},"s":{"docs":{},")":{"docs":{},"[":{"0":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"1":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}},"docs":{}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.014563106796116505},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}},"w":{"docs":{},"o":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0022371364653243847}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.011160714285714286},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"e":{"docs":{},"d":{"docs":{},"=":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.00804289544235925}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0673076923076923},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.009843400447427294},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.021447721179624665},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.02491103202846975},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.016},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.025362318840579712},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.016042780748663103},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.011560693641618497},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.015873015873015872}},"e":{"docs":{},"r":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0017897091722595079},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}}}},"p":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561}}},"t":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"a":{"docs":{},"h":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}},"r":{"docs":{},"l":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.03753351206434316},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.043689320388349516},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0427807486631016},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.03468208092485549},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.042328042328042326}},"(":{"docs":{},"'":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"d":{"docs":{},"n":{"docs":{},"d":{"5":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.002680965147453083}}}}}}}}},"v":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"l":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669},"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.022321428571428572},"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.02092050209205021},"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.014634146341463415},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.012422360248447204},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.03125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.013422818791946308},"injectables/SpellsService.html":{"ref":"injectables/SpellsService.html","tf":0.005361930294906166},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.02491103202846975},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.012},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.014492753623188406},"interfaces/DropdownGroup.html":{"ref":"interfaces/DropdownGroup.html","tf":0.029411764705882353},"interfaces/DropdownItem.html":{"ref":"interfaces/DropdownItem.html","tf":0.09375},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}},"e":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.004878048780487805}}}}},"t":{"docs":{},"h":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.00625}}}},"s":{"docs":{},":":{"docs":{},"[":{"4":{"docs":{"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015}}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"5":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"docs":{}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"5":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"docs":{}}}}}}}},"(":{"0":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}},"1":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}},"docs":{}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.01871657754010695},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697},"classes/DiceSet.html":{"ref":"classes/DiceSet.html","tf":0.0071174377224199285},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345},"interfaces/DiceResults.html":{"ref":"interfaces/DiceResults.html","tf":0.004},"interfaces/DiceSetI.html":{"ref":"interfaces/DiceSetI.html","tf":0.0036231884057971015},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.07142857142857142}}}},"t":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0035794183445190158}}}}}}},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.009708737864077669}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.004464285714285714},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/DiceBonusFormComponent.html":{"ref":"components/DiceBonusFormComponent.html","tf":0.008368200836820083}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/DieRollResultsTableComponent.html":{"ref":"components/DieRollResultsTableComponent.html","tf":0.00975609756097561}}}}}},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"i":{"docs":{},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877}}}}}}}}},"c":{"docs":{},"r":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.009316770186335404}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.006696428571428571},"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.0053475935828877},"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.006211180124223602},"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.03125},"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539},"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.0048543689320388345}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/Spell.html":{"ref":"classes/Spell.html","tf":0.009708737864077669},"interfaces/SpellI.html":{"ref":"interfaces/SpellI.html","tf":0.0053475935828877},"interfaces/SpellResponse.html":{"ref":"interfaces/SpellResponse.html","tf":0.005780346820809248},"interfaces/SpellResponseResults.html":{"ref":"interfaces/SpellResponseResults.html","tf":0.005291005291005291}}}}}}}},"t":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.009615384615384616}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004807692307692308}}}}}},"s":{"docs":{},"t":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}},"a":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"components/StepperComponent.html":{"ref":"components/StepperComponent.html","tf":0.0125}}}},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}}}}},"i":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.03529411764705882}}}}}},"z":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"interfaces/CharacterStats.html":{"ref":"interfaces/CharacterStats.html","tf":0.011764705882352941}}}}}}},"v":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}},"y":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}},"o":{"docs":{},"m":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},"[":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/AttackRollsComponent.html":{"ref":"components/AttackRollsComponent.html","tf":0.002232142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},"[":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"components/SkillCheckComponent.html":{"ref":"components/SkillCheckComponent.html","tf":0.003105590062111801}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}}}}}},"y":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/OverlayComponent.html":{"ref":"components/OverlayComponent.html","tf":0.00267379679144385}}}},"u":{"docs":{},"'":{"docs":{},"r":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.0008948545861297539}}}}}}},"x":{"docs":{"injectables/DiceCalculationsService.html":{"ref":"injectables/DiceCalculationsService.html","tf":0.00044742729306487697}}}},"length":2393},"corpusTokens":["0","0/1","0/19","0/2","0/3","0/4","0/6","0/8","00","01","0];sums2","1","1/10","1/2","1/4","1/5","1/7","10","100","11","12","13","14","15","16","17","17/21","18","19","2","2/7","20","25","28","2d","3","3]]the","4","4/4","5","50","6","6th","7","8","80","9","95","9pdf6ttr0j7hmkk_7t6xtpun","abbrevi","accept","access","account","act","action","ad","add","addit","addobservabletoautocomplet","addobservabletoleveldropdown","address","address2","addressform","adjust","adjustprobabilityforattempt","adjustprobabilityforattempts(likelihoodtarget","advantag","advantage.advantag","advantage.disadvantag","advantage.it'","advantage.non","advantage.savageattack","advantage/disadvantag","advantageadvantag","advantagedisadvantag","advantageenum","advantagenon","advantageopt","ak","al","alabama","alaska","alert('thank","algorithm","allow","alreadi","american","amount","angular","angular/cdk/layout","angular/common","angular/common/http","angular/cor","angular/form","angular/material/autocomplet","angular/material/button","angular/material/card","angular/material/form","angular/material/icon","angular/material/input","angular/material/list","angular/material/radio","angular/material/select","angular/material/sidenav","angular/material/t","angular/material/toolbar","angular/rout","angularbg3cheat","angularhttps://www.youtube.com/watch?v=xtcjqawij2c&list=plw5h0dij","api","app","app.component.html","app.component.scss","appcompon","appconfig","appear","appli","ar","arizona","arkansa","array","array(6","array(7).keys()].slice(spell.level","arraydiceresult","assum","asyncpip","attack","attackrollscompon","attackrollsform","attackrollsformsubmit","attempt","attemptsopt","autocomplet","automat","automatically,bas","az","bar","barbarian","bard","base","be","befor","between","bg3","block","bonu","boolean","both","break","breakpoint","breakpointobserv","browser","build","built","button","c77de.web.app","ca","calc","calcul","calculations.serivce.t","calculations.servic","calculations.service.t","calculations.service.ts.each","california","call","carolina","case","catch(","certain","chanc","chang","charact","characterclass","charactersheetcompon","characterstat","charisma","cheat","check","check.component.html","check.component.scss","check.component.t","check/skil","checkadvantagevalu","checkadvantagevalue(advantag","choos","citi","class","cleric","co","code","colorado","columbia","commonmodul","compani","compodoc","compon","componentref","componentth","connecticut","console.log","console.log('attack","console.log('damag","console.log('dic","console.log('excecut","console.log('pip","console.log('skil","console.log('submit","console.log('t","console.log(`adjust","console.log(`advantag","console.log(`disadvantag","console.log(skillchecksuccessch","const","constant","constitut","construct","constructor","constructor(http","constructor(nam","constructor(undefin","contain","control","controlcontain","controlguid","controlkey","controlvalueaccessor","convert","copi","count","coverag","covnert","creat","createtablecomponent(tableinput","ct","cum","cumpercentageresult","cumulativepercentagetot","current","currentadvantagevalu","currentdievalu","currentspellrang","currentsum","custom","d10","d10(dicenum","d10num","d12","d12(dicenum","d12num","d20","d20num]thi","d4","d4(dicenum","d4num","d6","d6(dicenum","d6num","d8","d8(dicenum","d8num","dakota","damag","damage={0","data","dc","de","decim","decis","decrement","default","defaultd20rollresult","deicmal","delawar","denomen","deploy","describ","descript","design","detail","determin","dexter","dice","dice.thi","dicebonuscompon","dicebonusformcompon","dicecalc","dicecalcmap","dicecalcmap(diceset","dicecalcmapadvantag","dicecalcmapadvantage(diceset","dicecalcmapsetupchoosedic","dicecalcmapsetupchoosedice(dicevalue1","dicecalcmapsetuppossiblevalu","dicecalcmapsetuppossiblevalues(possiblevalu","dicecalcresult","dicecalcresults(diceset","dicecalcservic","dicecalcul","dicecalculationsservic","dicefac","diceresult","dicerol","dicerollresult","diceset","diceset(diedict","diceset(json.pars","diceset,th","diceset.advantag","diceset.attempt","diceset.modifi","diceset.t","diceset.target","diceset.target.tostr","diceseteg","diceseti","dicesetidiceset","dicesetstr","dicesetstring(diceset","dicestr","dicesum","dicevalue1","dicevalue2","dict","die","diebonus","diebonusform","diedict","diedict['advantag","diedict['attempt","diedict['d20","diedict['target","diefac","dieindex","dieiter","dieresult","dieresults.push","dierol","dierollresultstablecompon","dievalu","differ","digit","disadvantag","display","displayedcolumn","displayspellautocompletevalue(selectedvalu","district","divid","dnd","dnd,and","dnd.tailwindcss","dnd5eapi","document","document.getelementbyid('damag","document.getelementbyid('success","document.getelementbyid('target","done","dropdown","dropdowngroup","dropdownitem","druid","dynam","each","easi","easier","edit","edit.thi","empti","end","enough","enum","equal","except","explan","export","extend","fals","fb","feder","field","fighter","file","filter","filter(spelllist","filteredgroupspelllist","final","finalsum","finalsums.get(modi","finalsums.set(modi","firebas","first","firstnam","fl","florida","fm","for(let","forkjoin","forkjoin(spellsgroups).pip","form","form.compon","form.component.html","form.component.scss","form.component.t","form/dic","formbuild","formcontrol","formcontrol(0","formcontrol(1","formcontrol(advantage.non","formcontrol(this.selectedspell?.level","formgroup","formreus","formsmodul","forwardref","found","found.component.html","found.component.scss","found.component.t","found/not","fraction","fractionabovetarget","free","frontend","full","function","ga","gener","generatediceset","generatetable(tableinput","georgia","get","getallspel","getallspellsoflevel","getallspellsoflevel(level","getspel","getspell(url","github","give","given","gotten","group","groupnam","gu","guam","guid","hampshir","handl","hardcodedautocomplet","hasunitnumb","hawaii","here","hi","higher","highest","hit","hold","home","http","httpclient","https://flowbite.com/docs/forms/numb","https://jsonplaceholder.typicode.com","https://test","https://transform.tools/json","https://v5.material.angular.io/guide/cr","https://www.dnd5eapi.co","https://www.dnd5eapi.co/api","https://www.dnd5eapi.co/api/spel","https://www.dnd5eapi.co/api/spellsdata","https://www.dnd5eapi.co/apiapi","https://www.youtube.com/watch?v=xtcjqawij2c&list=plw5h0dij","i[0","i[1","ia","id","idaho","identifi","if(dicevalue1","if(minel","if(nextdicev","if(spell.level","if(spelllevel","if(successel","if(tableinput","if(targetch","if(targetdcel","if(this.maxroll(diceset","if(this.minroll(diceset","if(this.topercentagedefault(numrol","il","illinoi","implement","import","improperli","increment","index","indiana","individu","info","inform","ing","initi","inject","inject(breakpointobserv","inject(controlcontain","inject(dicecalculationsservic","inject(formbuild","inject(spellsservic","input","input({requir","inputmodifi","intellig","interfac","interfaceperform","invok","iowa","isadvantagenone(currentadvantagevalu","ishandset","island","it'","iter","jersey","json.pars","json.stringify(this.attackrollsform.value))['diebonus","json.stringify(this.skillcheckform.value))['diebonus","kansa","karma.document","kentucki","key","ks","ky","la","label","larg","lastnam","layout.test","level","level=1","levelnum","levelth","likelihood","likelihoodtarget","line","link","list","local","look","looks.thi","loop","louisiana","lowest","ma","made","main","make","mani","map","map(result","map(spellgroup","map.foreach((numrol","map[rol","mariana","marshal","maryland","massachusett","matautocompletemodul","matbuttonmodul","matbuttontogglemodul","matcardmodul","match","materi","matformfieldmodul","math.max(dicevalue1","math.min(dicevalue1","maticonmodul","matinputmodul","matlistmodul","matradiomodul","matselectmodul","matsidenavmodul","mattablemodul","mattoolbarmodul","max","maxel","maxelement.innertext","maxrol","maxroll(diceset","md","metadata","method","mexico","mh","mi","michigan","micronesia","min","min/max","mind","minel","minelement.innertext","minlevel","minnesota","minrol","minroll(diceset","minu","miscellan","mississippi","missouri","mn","mo","mockspellrespons","mockspellresult0","mockspellresult1","modi","modif","modifi","modifier=0","modul","monk","montana","mp","ms","mt","multi","multipl","multipli","name","natur","navbar","navbar.component.html","navbar.component.scss","navbarcompon","navbarit","nc","nd","ne","nebraska","necessari","need","nektos.deploy","nevada","new","next","nextdicev","ng_value_accessor","ngondestroy","ngoninit","nh","nj","nm","none","north","northern","notfoundcompon","null","num","number","number.default","numdecimalspac","numdigitsafterdot","numpossibledierol","numpossibledierolls(diceset","numpossiblerol","numresult","numrol","numrollsabovetarget","nv","ny","o(n^3","object","observ","oh","ohio","ok","oklahoma","on","onc","onchang","onchange(valu","oninit","onsubmit","ontouch","option","order","oregon","organ","out","outlet","over","overlay","overlay.component.html","overlay.component.scss","overlaycompon","overview","pa","page","pageit","paladin","palau","param","paramet","parentcontain","parentformgroup","parseint(key","pennsylvania","percent","percentag","percentage.thi","percentageresult","perform","permut","pipe","pipe(map((respons","play","plu","point","possibl","possibledicevalu","possibledicevalues(diceset","possiblevalu","possiblevalues.entri","possiblevalues.flatmap","possiblevalues.push","possiblevalues.revers","postalcod","pr","previou","printdiceset","printdiceset(diceset","privat","probabl","profici","project","properli","properti","protect","provid","providedin","public","puerto","push","pw","ranger","raw","rawspelllist","reach","reactiveformsmodul","read","readm","receiv","recreat","relat","repres","request","requir","reset","resourc","respons","response.result","response['damage']['damage_at_character_level']['1","response['damage']['damage_at_slot_level","response['heal_at_slot_level","response['level","response['nam","response[key","result","result.match","results.thi","retstr","return","reusabl","rhode","ri","rico","rogu","rol","roll","roll,and","roll,th","rolled,and","rollresult","rolls.component.html","rolls.component.scss","rolls.component.t","rolls.most","rolls/attack","rollsther","rollto","root","round","router","routerlink","routerlink,routermodul","routermodul","routeroutlet","row","rxj","rxjs/oper","samoa","savag","sc","sd","search","second","select","selectedspel","selectedvalu","selectedvalue.nam","selectedvalue?.url","selectedvalueasstr","selector","separ","servic","set","setdamagefromapi","setdamagefromapi(respons","setgroupedspelllist","sharereplay","sheet","sheet.component.html","sheet.component.scss","sheet.component.t","sheet/charact","ship","show","shown","side","sign","signal","simplifi","skill","skillcheck","skillcheckcalc","skillcheckcalc(diceset","skillcheckcalcadvantag","skillcheckcalcadvantage(targetch","skillcheckcalcadvantagedisadvantag","skillcheckcalcadvantagedisadvantage(advantag","skillcheckcalcdisadvantag","skillcheckcalcdisadvantage(targetch","skillcheckcalcmodifi","skillcheckcalcmodifiers(diceset","skillcheckcompon","skillcheckform","skillchecksubmit","skillchecksuccessch","skillchecksuccesschance).tostr","skipself","someth","sorcer","sourc","south","space","specif","spell","spell(spellnam","spell.damage[minlevel].d10","spell.damage[minlevel].d12","spell.damage[minlevel].d4","spell.damage[minlevel].d6","spell.damage[minlevel].d8","spell.name.tolowercase().startswith(spellstr","spell.setdamagefromapi","spell.t","spell.thi","spellgroup.map(spelllist","spelli","spelllevel","spelllist.filter(spel","spelllist.length","spellnam","spellrespons","spellresponse.result","spellresponseresult","spells.servic","spells.service.t","spellsearchinput","spellsearchinput?.nam","spellsgroup","spellslist","spellsservic","spellstr","spellstring?.tolowercas","src/app/app.component.t","src/app/attack","src/app/charact","src/app/characterstats.t","src/app/di","src/app/dic","src/app/diceset.t","src/app/dropdown.t","src/app/navbar/navbar.component.t","src/app/not","src/app/overlay/overlay.component.t","src/app/skil","src/app/spell.t","src/app/spells.service.t","src/app/stepper/stepper.component.t","standalon","start","startwith","state","statement","stay","stepper","stepper.component.html","stepper.component.scss","stepper.component.t","stepper/stepper.compon","steppercompon","store","strength","string","style","styleurl","submit","subscrib","subsect","succe","succeed","succeed.it","success","successel","successelement.innerhtml","suce","suceeed","sum","sums1","sums2","sums2.push(currentdievalu","sums2.push(currentsum","sums2.push(nextdicev","sums2.slic","sums2.sums1","support","suppos","sure","svg","switch(advantag","switchmap","switchmap(spellsearchinput","symbol.iter","tabl","table.compon","table.component.html","table.component.scss","table.component.t","table/di","tableinput","tableref","tablereus","take","target","target).length","targetch","targetdc","targetdcel","targetdcelement.innerhtml","technolog","templateurl","tennesse","test","testautocomplet","texa","th","thepercentag","theposs","third","this.#tableref","this.#tableref?.setinput('diceresult","this.addobservabletoautocomplet","this.addobservabletoleveldropdown","this.adjustprobabilityforattempt","this.attackrollsform.get('spell')!.valuechanges.pip","this.attackrollsform.get('spell')!.valuechanges.subscrib","this.attackrollsform.get('spelllevel')!.valuechanges.subscrib","this.attackrollsform.valuechanges.subscribe(valu","this.breakpointobserver.observe(breakpoints.handset","this.createtablecompon","this.createtablecomponent(dicerollresult","this.currentspellrang","this.currentspellrange[0","this.d10","this.d12","this.d20","this.d4","this.d6","this.d8","this.damag","this.damage[1","this.damage[key]}\\n","this.damage[parseint(key","this.dicebonuscomponent.d10","this.dicebonuscomponent.d12","this.dicebonuscomponent.d4","this.dicebonuscomponent.d6","this.dicebonuscomponent.d8","this.dicecalcmap(diceset","this.dicecalcmapadvantage(diceset","this.dicecalcmapsetupchoosedic","this.dicecalcmapsetuppossiblevalu","this.dicecalcservice.dicecalcresults(diceset","this.dicecalcservice.maxroll(diceset).tostr","this.dicecalcservice.minroll(diceset).tostr","this.dicecalcservice.skillcheckcalc(diceset","this.dicecalculations.defaultd20rollresult","this.fb.group","this.filteredgroupspelllist","this.generatediceset","this.generatetable(dicecalcresult","this.generatetable(undefin","this.http","this.http.get","this.key","this.level","this.nam","this.numpossibledierolls(diceset","this.parentcontainer.control","this.parentformgroup.addcontrol(this.controlkey","this.parentformgroup.get(this.controlkey)?.get('d10","this.parentformgroup.get(this.controlkey)?.get('d10')?.setvalue(dicenum","this.parentformgroup.get(this.controlkey)?.get('d12","this.parentformgroup.get(this.controlkey)?.get('d12')?.setvalue(dicenum","this.parentformgroup.get(this.controlkey)?.get('d4","this.parentformgroup.get(this.controlkey)?.get('d4')?.setvalue(dicenum","this.parentformgroup.get(this.controlkey)?.get('d6","this.parentformgroup.get(this.controlkey)?.get('d6')?.setvalue(dicenum","this.parentformgroup.get(this.controlkey)?.get('d8","this.parentformgroup.get(this.controlkey)?.get('d8')?.setvalue(dicenum","this.parentformgroup.removecontrol(this.controlkey","this.possibledicevalues(diceset","this.rawspelllist","this.selectedspel","this.selectedspell?.damage[levelnum].d10","this.selectedspell?.damage[levelnum].d12","this.selectedspell?.damage[levelnum].d4","this.selectedspell?.damage[levelnum].d6","this.selectedspell?.damage[levelnum].d8","this.setgroupedspelllist","this.skillcheckcalcadvantage(targetch","this.skillcheckcalcadvantagedisadvantag","this.skillcheckcalcdisadvantage(targetch","this.skillcheckcalcmodifiers(diceset","this.skillcheckform.valu","this.skillcheckform.value.advantag","this.skillcheckform.value.attempt","this.skillcheckform.value.targetdc","this.skillcheckform.valuechanges.subscrib","this.skillchecksubmit","this.spellsservice.getallspel","this.spellsservice.getspell(selectedvalueasstr","this.topercentage(cumulativepercentagetot","this.topercentage(numrol","this.topercentagedefault","this.topercentagedefault(numrol","this.updatevalue(this.valu","this.url","this.url.href}/spells?level=${level","this.url.href}/spells?level=0&level=1&level=2&level=3&level=4&level=5&level=6","this.url.origin}${url","this.url}\\n","this.valu","this.vcr()?.clear","this.vcr()?.createcomponent(dierollresultstablecompon","those","through","time","titl","tn","togeth","toggl","topercentag","topercentage(decim","topercentagedefault","topercentagedefault(decim","tostr","total","totalrol","totalrolls)[0","totalrolls)[1","transform","tri","true","two","tx","type","type=\"numb","typeof","typescript","typescriptbas","ui","undefin","undefined=undefin","understand","unknown","up","updat","updatevalu","updatevalue(newvalu","url","url('https://www.dnd5eapi.co/api","url.dnd","us","useexist","usefactori","user","ut","utah","va","valid","validators.compos","validators.maxlength(5","validators.min(0","validators.min(1","validators.minlength(5","validators.requir","valu","value,th","values:[4","valueth","variabl","variat","vcr","vermont","version","vi","video","viewchild","viewchild('dieform","viewchild('tablecontain","viewchildren","viewcontainerref","viewencapsul","viewprovid","virgin","virginia","visual","void","vt","wa","want","warlock","washington","webpag","websit","west","whether","whole","wi","wisconsin","wisdom","wizard","wv","wy","wyom","x","york","you'r","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nAngularBg3Cheats\nWebpage found here: https://test-00-c77de.web.app/\nThis webpage is designed to show all possible values that could result in rolling certain amounts of dice.This makes it easier to determine what the likelihood of each decision would be when playing dnd,and properly understand how likely an action is to suceed when you try it in dnd.\nTechnologies Used\nAngular is used to build website. API calls are made to https://www.dnd5eapi.co/ to get the list of all spells in dnd.TailwindCSS and Material are used for styling components, and organizing the layout.Testing is done with Karma.Documentation is built with compodoc, and deployed to github pages using github actions. Local testing of github actions was using act by nektos.Deployment is handled by firebase.\nPages\nServices\n\ndice-calculations.service.ts -- This holds all the functions used in dice calculations\nspells.service.ts -- This holds all the functions used to access DnD API to get spell information\n\nData Types\n\nspell.ts -- This holds all the data types used to organize data gotten from API\ndiceset.ts -- This holds all the data types used to organize data related to dice rolls\nCheck skillCheckCalc function on diceset details main algorithm used to calculate dice rolls\n\n\n\nComponents\n\nskill-check.component.ts -- Skill Check PageIt contains frontend for calculating likelihood of skill check suceeeding.\nattack-rolls.component.ts -- Attack Rolls PageIt contains frontend for calculating spell damage and likelihood.\nstepper.component.ts -- Dice inputModified form input (type=\"number\", but with + and - buttons on the sides)\ndice-bonus-form.component.ts -- Dice FormReusable form subsection that holds dice values that can be added to calculations\ndie-roll-results-table.component.ts -- Roll TableReusable form table that is dynamically added to dice calculations pages\n\nVideo Resources Used\n\nDeploy to Firebase\nGithub Pages Deploy\nCustom form component (used in stepper.component.ts)\nReusable angular forms (used in dice-bonus-form.component)\nDynamic components (used to implement die-roll-results-table)\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        10 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Home page component -- holds side navbar with links to components of other pages, and organizes router-outlet where the other components are shown\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             title\n                        \n                    \n                    \n                        \n                            title:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: angular-bg3-cheats\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, ViewEncapsulation } from '@angular/core';\nimport { RouterLink,RouterModule, RouterOutlet } from '@angular/router';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\n/**\n * Home page component -- holds side navbar with links to components of other pages, and organizes router-outlet where the other components are shown\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet, RouterLink,\n    RouterModule, MatSidenavModule,\n    MatToolbarModule, MatButtonModule, MatIconModule, MatListModule\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'angular-bg3-cheats';\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AttackRollsComponent.html":{"url":"components/AttackRollsComponent.html","title":"component - AttackRollsComponent","body":"\n                   \n\n\n\n  Components\n  AttackRollsComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/attack-rolls/attack-rolls.component.ts\n\n\n    \n        Description\n    \n    \n        This is the component linked to with attack-rolls link in the navbarIt allows the user to search a spell and calculate the amount of damage that the spell can do\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-attack-rolls\n            \n\n\n\n\n            \n                templateUrl\n                attack-rolls.component.html\n            \n\n\n        \n    \n\n\n\n\n\n    \n        Methods\n            \n                \n                    \n                        \n                             Observable\n                        \n                    \n    \n                    \n                        \n    Observable()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             Observable\n                        \n                    \n    \n                    \n                        \n    Observable()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             attackRollsForm\n                        \n                    \n                    \n                        \n                            attackRollsForm:     FormGroup\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentSpellRange\n                        \n                    \n                    \n                        \n                            currentSpellRange:     number[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             diceCalcService\n                        \n                    \n                    \n                        \n                            diceCalcService:     DiceCalculationsService\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             filteredGroupSpellList\n                        \n                    \n                    \n                        \n                            filteredGroupSpellList:     boolean\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             rawSpellList$\n                        \n                    \n                    \n                        \n                            rawSpellList$:     boolean\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selectedSpell\n                        \n                    \n                    \n                        \n                            selectedSpell:     SpellI\n    \n                        \n                    \n                        \n                            \n                                Default value: undefined\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             spellsService\n                        \n                    \n                    \n                        \n                            spellsService:     SpellsService\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { CommonModule } from '@angular/common';\nimport { Component, ComponentRef, inject, OnInit, ViewChild, viewChild, viewChildren, ViewContainerRef } from '@angular/core';\nimport { SpellsService } from '../spells.service';\nimport { forkJoin, map, Observable, startWith, switchMap } from 'rxjs';\nimport { Spell, SpellI, SpellResponse, SpellResponseResults } from '../spell';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { DiceBonusFormComponent } from '../dice-bonus-form/dice-bonus-form.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DieRollResultsTableComponent } from '../die-roll-results-table/die-roll-results-table.component';\nimport { DiceResults, DiceSet, DiceSetI } from '../diceset';\nimport { DiceCalculationsService } from '../dice-calculations.service';\n\n/**\n * This is the component linked to with attack-rolls link in the navbar\n * It allows the user to search a spell and calculate the amount of damage that the spell can do\n */\n@Component({\n  selector: 'app-attack-rolls',\n  standalone: true,\n  imports: [\n    CommonModule, MatInputModule, ReactiveFormsModule,\n    MatSelectModule, MatAutocompleteModule, MatCardModule,\n    DiceBonusFormComponent, MatButtonModule\n],\n  templateUrl: './attack-rolls.component.html',\n  styleUrl: './attack-rolls.component.scss'\n})\nexport class AttackRollsComponent implements OnInit{\n  spellsService: SpellsService = inject(SpellsService);\n  diceCalcService: DiceCalculationsService = inject(DiceCalculationsService);\n  rawSpellList$!: Observable;\n  currentSpellRange: number[] = new Array(6);\n  selectedSpell: SpellI | undefined = undefined;\n  attackRollsForm = new FormGroup({\n    spell: new FormControl(''),\n    spellLevel: new FormControl(this.selectedSpell?.level || 1),\n    testAutocomplete: new FormControl(''),\n    hardCodedAutocomplete: new FormControl('')\n  });\n  filteredGroupSpellList!: Observable;\n  @ViewChild('dieForm') diceBonusComponent!: DiceBonusFormComponent;\n  vcr = viewChild('tableContainer', {read: ViewContainerRef});\n  #tableRef!: ComponentRef | undefined;\n\n  /**\n   * initialize observable to autocomplete to change form values based on selected spell\n   * 1. use spell value to change currentSpellRange array (this changes values shown in level selector)\n   * 2. use spell value to change diceBonusComponent dice values\n   */\n  addObservableToAutocomplete() {\n    this.attackRollsForm.get('spell')!.valueChanges.subscribe(\n      (selectedValue) => {\n        const selectedValueAsString = typeof selectedValue === 'string' ? '' : selectedValue?.url;\n        this.spellsService.getSpell(selectedValueAsString || '').subscribe(\n          (spell) => {\n            if(spell.level == 0) this.currentSpellRange = [0];\n            else this.currentSpellRange = [...Array(7).keys()].slice(spell.level);\n            this.selectedSpell = spell;\n\n            let minLevel = this.currentSpellRange[0];\n            this.diceBonusComponent.d4 = spell.damage[minLevel].d4 || 0;\n            this.diceBonusComponent.d6 = spell.damage[minLevel].d6 || 0;\n            this.diceBonusComponent.d8 = spell.damage[minLevel].d8 || 0;\n            this.diceBonusComponent.d10 = spell.damage[minLevel].d10 || 0;\n            this.diceBonusComponent.d12 = spell.damage[minLevel].d12 || 0;\n          }\n        )\n      }\n    )\n  }\n\n  /**\n   * The level dropdown observable will update the value of the dicerolls based on the spellLevel setting\n   */\n  addObservableToLevelDropdown() {\n    this.attackRollsForm.get('spellLevel')!.valueChanges.subscribe(\n      (levelNum) => {\n        levelNum = levelNum ?? this.currentSpellRange[0];\n        this.diceBonusComponent.d4 = this.selectedSpell?.damage[levelNum].d4 || 0;\n        this.diceBonusComponent.d6 = this.selectedSpell?.damage[levelNum].d6 || 0;\n        this.diceBonusComponent.d8 = this.selectedSpell?.damage[levelNum].d8 || 0;\n        this.diceBonusComponent.d10 = this.selectedSpell?.damage[levelNum].d10 || 0;\n        this.diceBonusComponent.d12 = this.selectedSpell?.damage[levelNum].d12 || 0;\n      }\n    )\n  }\n\n  /**\n   * Converts the SpellResponseResults type that the autocomplete values\n   * are stored as into the spell names that they show up as\n   * @param selectedValue current selected spell value\n   * @returns spell name or empty string\n   */\n  displaySpellAutocompleteValue(selectedValue: SpellResponseResults): string {\n    return selectedValue && selectedValue.name ? selectedValue.name : '';\n  }\n\n  /**\n   * Gets spell information from API to set filteredGroupSpellList variable that is used in spell autocomplete\n   */\n  setGroupedSpellList() {\n    let spellsGroups: Observable[] = [];\n    for(let i = 0; i  response.results)\n      ))\n    }\n    this.filteredGroupSpellList = this.attackRollsForm.get('spell')!.valueChanges.pipe(\n      startWith(''),\n      switchMap(spellSearchInput => {\n        let spellString = typeof spellSearchInput === 'string' ? spellSearchInput : spellSearchInput?.name;\n        // let spellString = spellSearchInput;\n        spellString = spellString?.toLowerCase() || '';\n        return forkJoin(spellsGroups).pipe(\n          map(spellGroup => \n            spellGroup.map(spellList => \n              spellList.filter(spell =>\n                spell.name.toLowerCase().startsWith(spellString || '')\n              )\n            ).filter(spellList => spellList.length > 0)\n          )\n        )\n      })\n    )\n  }\n\n  generateTable(tableInput: DiceResults[] | undefined) {\n    this.vcr()?.clear();\n    this.#tableRef = this.vcr()?.createComponent(DieRollResultsTableComponent);\n    if(tableInput) {\n      this.#tableRef?.setInput('diceResults', tableInput);\n    }\n  }\n\n  generateDiceSet(): DiceSetI {\n    let dieDict: DiceSetI = new DiceSet(JSON.parse(\n      JSON.stringify(this.attackRollsForm.value))['dieBonuses']);\n    console.log('submit received (attack-rolls)', dieDict);\n    return dieDict;\n  }\n\n  attackRollsFormSubmit() {\n    let diceSet = this.generateDiceSet();\n    // console.log('submit', diceSet);\n    let minElement = document.getElementById('damage-min');\n    let maxElement = document.getElementById('damage-max');\n    if(minElement && maxElement) {\n      minElement.innerText = this.diceCalcService.minRoll(diceSet).toString();\n      maxElement.innerText = this.diceCalcService.maxRoll(diceSet).toString();\n    }\n\n    let diceCalcResults = this.diceCalcService.diceCalcResults(diceSet);\n    this.generateTable(diceCalcResults);\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.rawSpellList$ = this.spellsService.getAllSpells();\n    this.addObservableToAutocomplete();\n    this.addObservableToLevelDropdown();\n    this.setGroupedSpellList();\n    // this.generateTable(undefined);\n    this.attackRollsForm.valueChanges.subscribe(value => \n      console.log('attack rolls form', value));\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CharacterSheetComponent.html":{"url":"components/CharacterSheetComponent.html","title":"component - CharacterSheetComponent","body":"\n                   \n\n\n\n  Components\n  CharacterSheetComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/character-sheet/character-sheet.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-character-sheet\n            \n\n\n\n\n            \n                templateUrl\n                character-sheet.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n        \n            import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-character-sheet',\n  standalone: true,\n  imports: [],\n  templateUrl: './character-sheet.component.html',\n  styleUrl: './character-sheet.component.scss'\n})\nexport class CharacterSheetComponent {\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiceBonusFormComponent.html":{"url":"components/DiceBonusFormComponent.html","title":"component - DiceBonusFormComponent","body":"\n                   \n\n\n\n  Components\n  DiceBonusFormComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/dice-bonus-form/dice-bonus-form.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds all the dice values that the user is able to set and edit.This component is used on both skill check component and attack rolls componentThe dice values are added to the form control automatically\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dice-bonus-form\n            \n\n\n\n\n            \n                templateUrl\n                dice-bonus-form.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                        { provide: ControlContainer, useFactory: () => {} }\n                    \n                \n            \n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            label\n                        \n                        \n                            \n                              Default value: Bonus Dice\n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                        \n                        \n                        \n                    \n                \n            \n    \n\n\n\n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public d10\n                        \n                    \n                    \n                        \n                            d10:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public d12\n                        \n                    \n                    \n                        \n                            d12:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public d4\n                        \n                    \n                    \n                        \n                            d4:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public d6\n                        \n                    \n                    \n                        \n                            d6:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public d8\n                        \n                    \n                    \n                        \n                            d8:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             parentContainer\n                        \n                    \n                    \n                        \n                            parentContainer:     ControlContainer\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             parentFormGroup\n                        \n                    \n                    \n                        \n                            parentFormGroup:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, inject, Input } from '@angular/core';\nimport { ControlContainer, FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { StepperComponent } from '../stepper/stepper.component';\nimport { MatCardModule } from '@angular/material/card';\n\n/**\n * This component holds all the dice values that the user is able to set and edit.\n * This component is used on both skill check component and attack rolls component\n * The dice values are added to the form control automatically\n */\n@Component({\n  selector: 'app-dice-bonus-form',\n  standalone: true,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useFactory: () => inject(ControlContainer, {skipSelf: true})\n    }\n  ],\n  imports: [ReactiveFormsModule, StepperComponent, MatCardModule],\n  templateUrl: './dice-bonus-form.component.html',\n  styleUrl: './dice-bonus-form.component.scss'\n})\nexport class DiceBonusFormComponent {\n  parentContainer = inject(ControlContainer);\n  @Input({required: true}) controlKey = '';\n  @Input() label = 'Bonus Dice';\n\n  get parentFormGroup() {\n    return this.parentContainer.control as FormGroup;\n  }\n\n  public get d4(): FormControl {\n    return this.parentFormGroup.get(this.controlKey)?.get('d4') as FormControl\n  }\n\n  public set d4(diceNum: number) {\n    this.parentFormGroup.get(this.controlKey)?.get('d4')?.setValue(diceNum);\n  }\n\n  public get d6(): FormControl {\n    return this.parentFormGroup.get(this.controlKey)?.get('d6') as FormControl\n  }\n\n  public set d6(diceNum: number) {\n    this.parentFormGroup.get(this.controlKey)?.get('d6')?.setValue(diceNum);\n  }\n\n  public get d8(): FormControl {\n    return this.parentFormGroup.get(this.controlKey)?.get('d8') as FormControl\n  }\n\n  public set d8(diceNum: number) {\n    this.parentFormGroup.get(this.controlKey)?.get('d8')?.setValue(diceNum);\n  }\n  \n  public get d10(): FormControl {\n    return this.parentFormGroup.get(this.controlKey)?.get('d10') as FormControl\n  }\n\n  public set d10(diceNum: number) {\n    this.parentFormGroup.get(this.controlKey)?.get('d10')?.setValue(diceNum);\n  }\n  \n  public get d12(): FormControl {\n    return this.parentFormGroup.get(this.controlKey)?.get('d12') as FormControl\n  }\n\n  public set d12(diceNum: number) {\n    this.parentFormGroup.get(this.controlKey)?.get('d12')?.setValue(diceNum);\n  }\n\n  ngOnInit() {\n    this.parentFormGroup.addControl(this.controlKey,\n      new FormGroup({\n        d4: new FormControl(0),\n        d6: new FormControl(0),\n        d8: new FormControl(0),\n        d10: new FormControl(0),\n        d12: new FormControl(0),\n        modifier: new FormControl(0),\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.parentFormGroup.removeControl(this.controlKey);\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DieRollResultsTableComponent.html":{"url":"components/DieRollResultsTableComponent.html","title":"component - DieRollResultsTableComponent","body":"\n                   \n\n\n\n  Components\n  DieRollResultsTableComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/die-roll-results-table/die-roll-results-table.component.ts\n\n\n    \n        Description\n    \n    \n        This creates a table using Material UI that organizes information from dice-calculations.service.ts.Each row of the table has the possible roll value from rolling the diceset,the number of possible rolls that result in said roll value,the percentage chance of rolling higher than that specific roll,the percentage chance of rolling that specific roll,and a bar that represents how rolling that specific roll visually looks.This component appears on both skill-check and attack-rolls forms.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-die-roll-results-table\n            \n\n\n\n\n            \n                templateUrl\n                die-roll-results-table.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            diceResults\n                        \n                        \n                              \n                                Type:    DiceResults[]\n\n                              \n                        \n                    \n                \n            \n    \n\n\n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             diceCalculations\n                        \n                    \n                    \n                        \n                            diceCalculations:     DiceCalculationsService\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             displayedColumns\n                        \n                    \n                    \n                        \n                            displayedColumns:     string[]\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, inject, Input } from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { DiceResults } from '../diceset';\nimport { CommonModule } from '@angular/common';\nimport { DiceCalculationsService } from '../dice-calculations.service';\n\n/**\n * This creates a table using Material UI that organizes information from dice-calculations.service.ts.\n * Each row of the table has the possible roll value from rolling the diceset,\n * the number of possible rolls that result in said roll value,\n * the percentage chance of rolling higher than that specific roll,\n * the percentage chance of rolling that specific roll,\n * and a bar that represents how rolling that specific roll visually looks.\n * This component appears on both skill-check and attack-rolls forms.\n */\n@Component({\n  selector: 'app-die-roll-results-table',\n  standalone: true,\n  imports: [CommonModule, MatTableModule],\n  templateUrl: './die-roll-results-table.component.html',\n  styleUrl: './die-roll-results-table.component.scss'\n})\nexport class DieRollResultsTableComponent {\n  diceCalculations = inject(DiceCalculationsService);\n  @Input() diceResults: DiceResults[] = this.diceCalculations.defaultD20RollResults();\n  // displayedColumns = [\n  //   'roll-result', 'num-result', 'percentage-result', 'percentage-block'\n  // ];\n  displayedColumns = [\n    'roll-result', 'num-result', 'percentage-cum-result', 'percentage-result'\n  ];\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n  Components\n  NavbarComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n\n            \n                templateUrl\n                navbar.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n    \n        Properties\n            \n                \n                    \n                        \n                            Private breakpointObserver\n                        \n                    \n                    \n                        \n                            breakpointObserver:     BreakpointObserver\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isHandset$\n                        \n                    \n                    \n                        \n                            isHandset$:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, inject } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { AsyncPipe } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.scss',\n  standalone: true,\n  imports: [\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    AsyncPipe,\n  ]\n})\nexport class NavbarComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n  Components\n  NotFoundComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/not-found/not-found.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n\n\n\n            \n                templateUrl\n                not-found.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n        \n            import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  imports: [],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss'\n})\nexport class NotFoundComponent {\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverlayComponent.html":{"url":"components/OverlayComponent.html","title":"component - OverlayComponent","body":"\n                   \n\n\n\n  Components\n  OverlayComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/overlay/overlay.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overlay\n            \n\n\n\n\n            \n                templateUrl\n                overlay.component.html\n            \n\n\n        \n    \n\n\n\n\n\n    \n        Methods\n            \n                \n                    \n                        \n                             onSubmit\n                        \n                    \n    \n                    \n                        \n    onSubmit()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             addressForm\n                        \n                    \n                    \n                        \n                            addressForm:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private fb\n                        \n                    \n                    \n                        \n                            fb:     FormBuilder\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             hasUnitNumber\n                        \n                    \n                    \n                        \n                            hasUnitNumber:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             states\n                        \n                    \n                    \n                        \n                            states:     { name: string; abbreviation: string; }[]\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, inject } from '@angular/core';\n\nimport { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCardModule } from '@angular/material/card';\n\n\n@Component({\n  selector: 'app-overlay',\n  templateUrl: './overlay.component.html',\n  styleUrl: './overlay.component.scss',\n  standalone: true,\n  imports: [\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    ReactiveFormsModule\n  ]\n})\nexport class OverlayComponent {\n  private fb = inject(FormBuilder);\n  addressForm = this.fb.group({\n    company: null,\n    firstName: [null, Validators.required],\n    lastName: [null, Validators.required],\n    address: [null, Validators.required],\n    address2: null,\n    city: [null, Validators.required],\n    state: [null, Validators.required],\n    postalCode: [null, Validators.compose([\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\n    ],\n    shipping: ['free', Validators.required]\n  });\n\n  hasUnitNumber = false;\n\n  states = [\n    {name: 'Alabama', abbreviation: 'AL'},\n    {name: 'Alaska', abbreviation: 'AK'},\n    {name: 'American Samoa', abbreviation: 'AS'},\n    {name: 'Arizona', abbreviation: 'AZ'},\n    {name: 'Arkansas', abbreviation: 'AR'},\n    {name: 'California', abbreviation: 'CA'},\n    {name: 'Colorado', abbreviation: 'CO'},\n    {name: 'Connecticut', abbreviation: 'CT'},\n    {name: 'Delaware', abbreviation: 'DE'},\n    {name: 'District Of Columbia', abbreviation: 'DC'},\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\n    {name: 'Florida', abbreviation: 'FL'},\n    {name: 'Georgia', abbreviation: 'GA'},\n    {name: 'Guam', abbreviation: 'GU'},\n    {name: 'Hawaii', abbreviation: 'HI'},\n    {name: 'Idaho', abbreviation: 'ID'},\n    {name: 'Illinois', abbreviation: 'IL'},\n    {name: 'Indiana', abbreviation: 'IN'},\n    {name: 'Iowa', abbreviation: 'IA'},\n    {name: 'Kansas', abbreviation: 'KS'},\n    {name: 'Kentucky', abbreviation: 'KY'},\n    {name: 'Louisiana', abbreviation: 'LA'},\n    {name: 'Maine', abbreviation: 'ME'},\n    {name: 'Marshall Islands', abbreviation: 'MH'},\n    {name: 'Maryland', abbreviation: 'MD'},\n    {name: 'Massachusetts', abbreviation: 'MA'},\n    {name: 'Michigan', abbreviation: 'MI'},\n    {name: 'Minnesota', abbreviation: 'MN'},\n    {name: 'Mississippi', abbreviation: 'MS'},\n    {name: 'Missouri', abbreviation: 'MO'},\n    {name: 'Montana', abbreviation: 'MT'},\n    {name: 'Nebraska', abbreviation: 'NE'},\n    {name: 'Nevada', abbreviation: 'NV'},\n    {name: 'New Hampshire', abbreviation: 'NH'},\n    {name: 'New Jersey', abbreviation: 'NJ'},\n    {name: 'New Mexico', abbreviation: 'NM'},\n    {name: 'New York', abbreviation: 'NY'},\n    {name: 'North Carolina', abbreviation: 'NC'},\n    {name: 'North Dakota', abbreviation: 'ND'},\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n    {name: 'Ohio', abbreviation: 'OH'},\n    {name: 'Oklahoma', abbreviation: 'OK'},\n    {name: 'Oregon', abbreviation: 'OR'},\n    {name: 'Palau', abbreviation: 'PW'},\n    {name: 'Pennsylvania', abbreviation: 'PA'},\n    {name: 'Puerto Rico', abbreviation: 'PR'},\n    {name: 'Rhode Island', abbreviation: 'RI'},\n    {name: 'South Carolina', abbreviation: 'SC'},\n    {name: 'South Dakota', abbreviation: 'SD'},\n    {name: 'Tennessee', abbreviation: 'TN'},\n    {name: 'Texas', abbreviation: 'TX'},\n    {name: 'Utah', abbreviation: 'UT'},\n    {name: 'Vermont', abbreviation: 'VT'},\n    {name: 'Virgin Islands', abbreviation: 'VI'},\n    {name: 'Virginia', abbreviation: 'VA'},\n    {name: 'Washington', abbreviation: 'WA'},\n    {name: 'West Virginia', abbreviation: 'WV'},\n    {name: 'Wisconsin', abbreviation: 'WI'},\n    {name: 'Wyoming', abbreviation: 'WY'}\n  ];\n\n  onSubmit(): void {\n    alert('Thanks!');\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SkillCheckComponent.html":{"url":"components/SkillCheckComponent.html","title":"component - SkillCheckComponent","body":"\n                   \n\n\n\n  Components\n  SkillCheckComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/skill-check/skill-check.component.ts\n\n\n    \n        Description\n    \n    \n        This component allows for the checking of how likely a skill check is to succeed.It generates a frontend to display results from dice calculations, and a form for the user to input their dice calc information\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-skill-check\n            \n\n\n\n\n            \n                templateUrl\n                skill-check.component.html\n            \n\n\n        \n    \n\n\n\n\n\n    \n        Methods\n            \n                \n                    \n                        \n                             ComponentRef\n                        \n                    \n    \n                    \n                        \n    ComponentRef()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             diceCalcService\n                        \n                    \n                    \n                        \n                            diceCalcService:     DiceCalculationsService\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             tableRef\n                        \n                    \n                    \n                        \n                            tableRef:     boolean\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             vcr\n                        \n                    \n                    \n                        \n                            vcr:     Signal\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { CommonModule } from '@angular/common';\nimport { Component, ComponentRef, inject, OnInit, viewChild, ViewContainerRef } from '@angular/core';\nimport { FormControl, ReactiveFormsModule, FormGroup, Validators } from '@angular/forms';\nimport { DiceSet, DiceSetI, Advantage, DiceResults } from '../diceset';\nimport { DiceCalculationsService } from '../dice-calculations.service';\nimport { DiceBonusFormComponent } from '../dice-bonus-form/dice-bonus-form.component';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle'\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { DieRollResultsTableComponent } from '../die-roll-results-table/die-roll-results-table.component';\n\n/**\n * This component allows for the checking of how likely a skill check is to succeed.\n * It generates a frontend to display results from dice calculations, and a form for the user to input their dice calc information\n */\n@Component({\n  selector: 'app-skill-check',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule, CommonModule, MatCardModule, MatSelectModule,\n    DiceBonusFormComponent, MatButtonModule,\n    MatButtonToggleModule, MatInputModule\n  ],\n  templateUrl: './skill-check.component.html',\n  styleUrl: './skill-check.component.scss'\n})\nexport class SkillCheckComponent implements OnInit {\n  diceCalcService: DiceCalculationsService = inject(DiceCalculationsService);\n  vcr = viewChild('tableContainer', {read: ViewContainerRef});\n  #tableRef!: ComponentRef | undefined;\n  skillCheckForm = new FormGroup({\n    targetDC: new FormControl(0, [\n      Validators.required,\n      Validators.min(0)\n    ]),\n    advantage: new FormControl(Advantage.None),\n    attempts: new FormControl(1, [\n      Validators.required,\n      Validators.min(1)\n    ])\n  });\n  dieBonusForm = new FormGroup({\n    ' d4': new FormControl(0),\n    ' d6': new FormControl(0),\n    ' d8': new FormControl(0),\n    'd10': new FormControl(0),\n    'd12': new FormControl(0),\n  });\n  // diceSet!: DiceSet;\n  advantageEnum: typeof Advantage = Advantage;\n  advantageNone = Advantage.None;\n  advantageAdvantage = Advantage.Advantage\n  advantageDisadvantage = Advantage.Disadvantage;\n  advantageOptions = [\n    {id: 1, name: 'None', value: Advantage.None},\n    {id: 2, name: 'Advantage', value: Advantage.Advantage},\n    {id: 3, name: 'Disadvantage', value: Advantage.Disadvantage},\n  ];\n  attemptsOptions = [1, 2, 3, 4];\n\n  isAdvantageNone(currentAdvantageValue: Advantage) {\n    return currentAdvantageValue === Advantage.None;\n  }\n\n  generateDiceSet(): DiceSetI {\n    let dieDict = JSON.parse(\n      JSON.stringify(this.skillCheckForm.value))['dieBonuses'];\n    // previous line converts diebonuses form group into dict,\n    // this allows easy construction of new DiceSet once other parameters are set\n    dieDict['d20'] = 1;\n    dieDict['target'] = this.skillCheckForm.value.targetDC ?? 0;\n    dieDict['advantage'] = this.skillCheckForm.value.advantage ?? Advantage.None;\n    dieDict['attempts'] = this.skillCheckForm.value.attempts ?? 1;\n    return new DiceSet(dieDict);\n  }\n\n  createTableComponent(tableInput: DiceResults[] | undefined=undefined) {\n    this.vcr()?.clear();\n    this.#tableRef = this.vcr()?.createComponent(DieRollResultsTableComponent);\n    if(tableInput) {\n      console.log('table recreated');\n      this.#tableRef?.setInput('diceResults', tableInput);\n    }\n  }\n\n  skillCheckSubmit() {\n    let diceset = this.generateDiceSet();\n    let skillCheckSuccessChance = this.diceCalcService.skillCheckCalc(diceset);\n    let successElement = document.getElementById('success-chance');\n    let targetDCElement = document.getElementById('target-dc-value');\n    let diceRollResults = this.diceCalcService.diceCalcResults(diceset);\n    console.log('skill check submit', this.skillCheckForm.value);\n    if(successElement !== null) {\n      console.log(skillCheckSuccessChance);\n      successElement.innerHTML = (skillCheckSuccessChance).toString();\n    }\n    if(targetDCElement !== null) {\n      targetDCElement.innerHTML = diceset.target.toString();\n    }\n    this.createTableComponent(diceRollResults);\n  }\n\n  ngOnInit(): void {\n    this.createTableComponent();\n    this.skillCheckForm.valueChanges.subscribe(\n      () => this.skillCheckSubmit()\n    );\n  }\n\n  constructor() {}\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StepperComponent.html":{"url":"components/StepperComponent.html","title":"component - StepperComponent","body":"\n                   \n\n\n\n  Components\n  StepperComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/stepper/stepper.component.ts\n\n\n    \n        Description\n    \n    \n        https://v5.material.angular.io/guide/creating-a-custom-form-field-controlguide here in case I want to change my mind and just make one using angularhttps://www.youtube.com/watch?v=xTcJQaWiJ2c&list=PLw5h0DiJ-9PDF6TTr0J7HmKK_7t6XTPuN This is a custom number input that has plus and minus signs on ths sides to modify the dice valueThe styling for the component is found here: https://flowbite.com/docs/forms/number-input/\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                    \n                        { provide: NG_VALUE_ACCESSOR, useExisting: , multi:  }\n                    \n                \n            \n\n\n            \n                selector\n                app-stepper\n            \n\n\n\n\n            \n                templateUrl\n                stepper.component.html\n            \n\n\n        \n    \n\n\n\n\n\n    \n        Methods\n            \n                \n                    \n                        \n                             onChange\n                        \n                    \n    \n                    \n                        \n    onChange(value: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onTouch\n                        \n                    \n    \n                    \n                        \n    onTouch()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             increment\n                        \n                    \n    \n                    \n                        \n    increment()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             decrement\n                        \n                    \n    \n                    \n                        \n    decrement()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updateValue\n                        \n                    \n    \n                    \n                        \n    updateValue(newValue: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             value\n                        \n                    \n                    \n                        \n                            value:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\n\n/**\n * https://v5.material.angular.io/guide/creating-a-custom-form-field-control\n * guide here in case I want to change my mind and just make one using angular\n * https://www.youtube.com/watch?v=xTcJQaWiJ2c&list=PLw5h0DiJ-9PDF6TTr0J7HmKK_7t6XTPuN  StepperComponent),\n      multi: true,\n    }\n  ],\n  templateUrl: './stepper.component.html',\n  styleUrl: './stepper.component.scss'\n})\nexport class StepperComponent implements ControlValueAccessor {\n  value: number | null = 0;\n  onChange(value: number | null) {\n    this.value = value;\n  }\n  onTouch() {}\n  increment() {\n    this.updateValue(this.value !== null ? this.value + 1 : 1);\n  }\n  decrement() {\n    if (this.value ?? 0 >= 1) {\n      this.updateValue(this.value != null ? this.value - 1 : 0);\n    } else if (this.value ?? 1 \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiceCalculationsService.html":{"url":"injectables/DiceCalculationsService.html","title":"injectable - DiceCalculationsService","body":"\n                   \n\n\n\n\n\n  Injectables\n  DiceCalculationsService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dice-calculations.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is used to make calculations related to dice rolls.Most functions require an input of a diceset type which contains information about the number of dice being rolled, the modifiers being applied to the dice roll, and the target of what the dice roll should hit\nMain functions: skillCheckCalc, diceCalcMap, diceCalcResults\n\n            \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     maxRoll\n                                \n                            \n            \n                            \n                                \n            maxRoll(diceset: DiceSetI)\n                                \n                            \n            \n                            \n                                \n                                        Generate max possible roll from diceset\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                diceset\n                                                            \n                                                            \n                                                                input of dice being rolled\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                The roll total generated if each die has its highest number\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     minRoll\n                                \n                            \n            \n                            \n                                \n            minRoll(diceset: DiceSetI)\n                                \n                            \n            \n                            \n                                \n                                        Generate min possible roll from diceset\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                diceset\n                                                            \n                                                            \n                                                                input of dice being rolled\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                The roll total generated if each die has its lowest number\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     numPossibleDieRolls\n                                \n                            \n            \n                            \n                                \n            numPossibleDieRolls(diceset: DiceSetI)\n                                \n                            \n            \n                            \n                                \n                                        This returns the number of possible permutations of the dice rollsthere are. This can be used as the denomenator for calc-ing thepercentage of successful dice rolls\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                diceset\n                                                            \n                                                            \n                                                                diceset that you're calcing with\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                The denomenator in calcing the probability\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     skillCheckCalcAdvantage\n                                \n                            \n            \n                            \n                                \n            skillCheckCalcAdvantage(targetChance: number)\n                                \n                            \n            \n                            \n                                \n                                        Converts raw skillCheckCalc value to chance of target being reached when d20 is rolled with advantage\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                targetChance\n                                                            \n                                                            \n                                                                Can accept either percentage or fraction calc of chance\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                fraction chance to hit target in skill check with advantage\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     skillCheckCalcDisadvantage\n                                \n                            \n            \n                            \n                                \n            skillCheckCalcDisadvantage(targetChance: number)\n                                \n                            \n            \n                            \n                                \n                                        Converts raw skillCheckCalc value to chance of target being reached when d20 is rolled with disadvantage\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                targetChance\n                                                            \n                                                            \n                                                                Can accept either percentage or fraction calc of chance\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                fraction chance to hit target in skill check with disadvantage\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     skillCheckCalcAdvantageDisadvantage\n                                \n                            \n            \n                            \n                                \n            skillCheckCalcAdvantageDisadvantage(advantage: Advantage, targetChance: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                advantage\n                                                            \n                                                            \n                                                                accepts Advantage enum to determine whether to modify the target chance to adjust for advantage or disadvantage\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                targetChance\n                                                            \n                                                            \n                                                                Resulting calculation from skillCheckCalc to determine chance of diceset reaching target\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                targetChance but modified to account for either advantage or disadvantage\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     checkAdvantageValue\n                                \n                            \n            \n                            \n                                \n            checkAdvantageValue(advantage: Advantage)\n                                \n                            \n            \n                            \n                                \n                                        This function just has a console.log to check for advantage.It's a testing function to make sure that advantage is being set properly\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                advantage\n                                                            \n                                                            \n                                                                diceset.advantage value\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     skillCheckCalc\n                                \n                            \n            \n                            \n                                \n            skillCheckCalc(diceset: DiceSetI)\n                                \n                            \n            \n                            \n                                \n                                        This function calculates the percent chance of a skill check succeeding\n            Explanation of Algorithm: O(n^3)\n            The algorithm will iterate through the dice roll possibilities one die at a time, and add each of the possible die options on the current die to the list of sums.\n            \n            possibleDiceValues() is used to convert dice set into 2d array\n            two arrays are created, sums1 and sums2.\n            sums1 is initiated to [0]. This array is used to store the sums generated from the dice already itereated through. This array will stay constant while the new die values are iterated through\n            sums2 is initiated to []. This array has the new sums from the dice value currently being iterated through pushed to it.\n            Assume [[1, 2], [1, 2, 3], [1, 2, 3]]The algorithm first itereates through the die values of the first die, and adds them to the values of the empty sums1 array. Sums are pushed to sums2.sums1 = [0];sums2 = [1, 2];\n            Sums2 is then copied to sums1.\n            Then, the next group of die results starts being iterated through, and gets added to values in sums1 array\n            \n            first loop of sums1:\n            sums1 = [1, 2];\n            sums2 = [1 + 1, 2 + 1];\n            second loop of sums1:\n            sums1 = [1, 2];\n            sums2 = [1 + 1, 2 + 1, 1 + 2, 2 + 2];\n            third loop of sums1:\n            sums2 = [1 + 1, 2 + 1, 1 + 2, 2 + 2, 1 + 3, 2 + 3];\n            After loop of dieFaces:\n            sums1 = [1, 2];\n            sums2 = [1 + 1, 2 + 1, 1 + 2, 2 + 2, 1 + 3, 2 + 3];\n            Second loop of dieFaces:\n            sums1 = [2, 3, 3, 4, 4, 5]; // Copy of sums2, except I simplified the sums\n            sums2 = [1 + 1, 2 + 1, 1 + 2, 2 + 2, 1 + 3, 2 + 3];\n            first iteration of sums1:\n            sums2 = [2 + 1, 3 + 1, 3 + 1, 4 + 1, 4 + 1, 5 + 1];\n            second iteration of sums1:\n            sums2 = [2 + 1, 3 + 1, 3 + 1, 4 + 1, 4 + 1, 5 + 1,          2 + 2, 3 + 2, 3 + 2, 4 + 2, 4 + 2, 5 + 2];\n            third iteration of sums1:\n            sums2 = [2 + 1, 3 + 1, 3 + 1, 4 + 1, 4 + 1, 5 + 1,          2 + 2, 3 + 2, 3 + 2, 4 + 2, 4 + 2, 5 + 2,          2 + 3, 3 + 3, 3 + 3, 4 + 3, 4 + 3, 5 + 3];\n            Final value of sums1 after loop: [3, 4, 4, 5, 5, 6, 4, 5, 5, 6, 6, 7, 5, 6, 6, 7, 7, 8]\n            \n            The algorithm filters the array for the sum values over the target\n            Divide number of die rolls over the target over total number of die roll possibilities, and convert it to a percentage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                diceset\n                                                            \n                                                            \n                                                                diceset object that represents the dice being rolled,and represents the target DC for the skillcheck\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                percentage chance of success rounded to two decimal points\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     skillCheckCalcModifiers\n                                \n                            \n            \n                            \n                                \n            skillCheckCalcModifiers(diceset: DiceSetI, probability: number)\n                                \n                            \n            \n                            \n                                \n                                        This function modifies the fraction probability calculated from skill check calc to the number used by the user interfacePerforms modifications like transforming the fraction into a percentage.This is called before the number is returned in skillcheckcalc\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                diceset\n                                                            \n                                                            \n                                                                input diceset from user\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                probability\n                                                            \n                                                            \n                                                                the raw number from skillcheckcalc\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                Modified number that is used by the code\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     adjustProbabilityForAttempts\n                                \n                            \n            \n                            \n                                \n            adjustProbabilityForAttempts(likelihoodTarget: number, attempts: number)\n                                \n                            \n            \n                            \n                                \n                                        This algorithm multiplies the probability of success by the amount of attempts.\n            This algorithm is used in the end of skillCheckCalc to account for multiple attempts\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                likelihoodTarget\n                                                            \n                                                            \n                                                                The probability value of something\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                attempts\n                                                            \n                                                            \n                                                                Number of times that the probability chance is performed\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                The chance of the probability succeeding at least once in the multiple attempts\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     diceCalcMap\n                                \n                            \n            \n                            \n                                \n            diceCalcMap(diceset: DiceSetI)\n                                \n                            \n            \n                            \n                                \n                                        This algorithm is a variation of skillCheckCalc that generates a full map of results.This variation does not look at the target of the roll\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                diceset\n                                                            \n                                                            \n                                                                input dice set\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                Map[roll result : number of rolls with roll result]\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     diceCalcMapAdvantage\n                                \n                            \n            \n                            \n                                \n            diceCalcMapAdvantage(diceset: DiceSetI)\n                                \n                            \n            \n                            \n                                \n                                        This algorithm is a variation of skillCheckCalc that generates a full map of results.This variation does not look at the target of the rollTo account for Advantage/Disadvantage, it adds an additional d20, and adds additional rolls taking the min/max with the additional d20\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                diceset\n                                                            \n                                                            \n                                                                input dice set\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                Map[roll result : number of rolls with roll result]\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     diceCalcMapSetupPossibleValues\n                                \n                            \n            \n                            \n                                \n            diceCalcMapSetupPossibleValues(possibleValues: number[][], advantage: Advantage)\n                                \n                            \n            \n                            \n                                \n                                        Takes the value from possibleValues, and modifies the number generated to account for advantage and savage attacker\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                possibleValues\n                                                            \n                                                            \n                                                                number[][] type of possible die values created from possibleDiceValues() function\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                advantage\n                                                            \n                                                            \n                                                                enum set by the diceset that determines if the dice are rolled with advantage or disadvantage\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number[][]\n            \n                                        \n                                            \n                                                possibleValues with additional dice added to account for advantage roll or savage attacker roll\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     diceCalcMapSetupChooseDice\n                                \n                            \n            \n                            \n                                \n            diceCalcMapSetupChooseDice(diceValue1: number, diceValue2: number, advantage: Advantage)\n                                \n                            \n            \n                            \n                                \n                                        Called in the iterator for generating skillCheckCalc and diceCalc\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                diceValue1\n                                                            \n                                                            \n                                                                dice value in sums1\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                diceValue2\n                                                            \n                                                            \n                                                                dice value in sums2\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                advantage\n                                                            \n                                                            \n                                                                determines what case dice are rolled with\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     diceCalcResults\n                                \n                            \n            \n                            \n                                \n            diceCalcResults(diceset: DiceSetI)\n                                \n                            \n            \n                            \n                                \n                                        Calls diceCalcMap to create map from diceset, and uses the map created to convert into DiceResults arrayDiceResults array is the data type used to make the roll results table\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                diceset\n                                                            \n                                                            \n                                                                input dice set, and modifier to dice rolls\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     DiceResults[]\n            \n                                        \n                                            \n                                                DiceResults array that holds the number of rolls, and the percentage of those rols to the whole\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     defaultD20RollResults\n                                \n                            \n            \n                            \n                                \n            defaultD20RollResults()\n                                \n                            \n            \n                            \n                                \n                                        This function is used in the skill-check component to generate the default d20 table when no modifiers nor separate dice rolls have been applied\n            \n                                        \n                                        \n                                        \n                                            Returns:     DiceResults[]\n            \n                                        \n                                            \n                                                List of DiceResults that can be used to generate the dice-results table for a default roll of a d20 with no modifiers\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     toPercentageDefault\n                                \n                            \n            \n                            \n                                \n            toPercentageDefault(decimal: number)\n                                \n                            \n            \n                            \n                                \n                                        toPercentageDefault is different from toPercentage because the numDigitsAfterDot variable gets set automatically,based on the number of decimals needed to display the number.Default number of decimal spaces (if percentage is large enough) is two deicmal spaces \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                decimal\n                                                            \n                                                            \n                                                                number between 0 and 1\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     [number, number]\n            \n                                        \n                                            \n                                                0: The decimal number converted into a percentage\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     toPercentage\n                                \n                            \n            \n                            \n                                \n            toPercentage(decimal: number, numDigitsAfterDot: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                decimal\n                                                            \n                                                            \n                                                                number between 0 and 1\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                numDigitsAfterDot\n                                                            \n                                                            \n                                                                number of digits after decimal to round first parameter to\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number\n            \n                                        \n                                            \n                                                The decimal number converted into a percentage rounded to numDigitsAfterDot decimal points\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     possibleDiceValues\n                                \n                            \n            \n                            \n                                \n            possibleDiceValues(diceset: DiceSetI)\n                                \n                            \n            \n                            \n                                \n                                        Covnerts die set into array of array of numbers that represents thepossible rolls created from the diceseteg. diceset { d4: 1, d12: 2 } results in:\n            [[1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]]\n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                diceset\n                                                            \n                                                            \n                                                                dice set that represents the number of dice being rolled, and the \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     number[][]\n            \n                                        \n                                            \n                                                converted\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     diceSetString\n                                \n                            \n            \n                            \n                                \n            diceSetString(diceSet: DiceSetI)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     printDiceSet\n                                \n                            \n            \n                            \n                                \n            printDiceSet(diceSet: DiceSetI)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Advantage, DiceResults, DiceSet, DiceSetI } from './diceset';\n\n/**\n * This service is used to make calculations related to dice rolls.\n * Most functions require an input of a diceset type which contains information about the number of dice being rolled, the modifiers being applied to the dice roll, and the target of what the dice roll should hit\n * \n * Main functions: skillCheckCalc, diceCalcMap, diceCalcResults\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiceCalculationsService {\n  /**\n   * Generate max possible roll from diceset\n   * @param diceset input of dice being rolled\n   * @returns The roll total generated if each die has its highest number\n   */\n  maxRoll(diceset: DiceSetI): number {\n    let dicesum = 0;\n    for(let i of diceset) {\n      dicesum += (i[0] * i[1]);\n    }\n    dicesum += diceset.modifier;\n    return dicesum;\n  }\n\n  /**\n   * Generate min possible roll from diceset\n   * @param diceset input of dice being rolled\n   * @returns The roll total generated if each die has its lowest number\n   */\n  minRoll(diceset: DiceSetI): number {\n    let dicesum = 0;\n    for(let i of diceset) {\n      dicesum += (1 * i[1]);\n    }\n    dicesum += diceset.modifier;\n    return dicesum;\n  }\n\n  /**\n   * This returns the number of possible permutations of the dice rolls\n   * there are. This can be used as the denomenator for calc-ing the\n   * percentage of successful dice rolls\n   * @param diceset diceset that you're calcing with\n   * @returns The denomenator in calcing the probability\n   */\n  numPossibleDieRolls(diceset: DiceSetI): number {\n    let dierolls = 1;\n    for(let i of diceset) {\n      dierolls *= i[0] ** i[1];\n    }\n    return dierolls;\n  }\n\n\n  /**\n   * Converts raw skillCheckCalc value to chance of target being reached when d20 is rolled with advantage\n   * @param targetChance Can accept either percentage or fraction calc of chance\n   * @returns fraction chance to hit target in skill check with advantage\n   */\n  skillCheckCalcAdvantage(targetChance: number): number {\n    if(targetChance > 1) {\n      targetChance /= 100;\n    }\n    return 1 - (1 - targetChance) ** 2;\n  }\n\n  /**\n   * Converts raw skillCheckCalc value to chance of target being reached when d20 is rolled with disadvantage\n   * @param targetChance Can accept either percentage or fraction calc of chance\n   * @returns fraction chance to hit target in skill check with disadvantage\n   */\n  skillCheckCalcDisadvantage(targetChance: number): number {\n    if(targetChance > 1) {\n      targetChance /= 100;\n    }\n    return targetChance ** 2;\n  }\n\n  /**\n   * \n   * @param advantage accepts Advantage enum to determine whether to modify the target chance to adjust for advantage or disadvantage\n   * @param targetChance Resulting calculation from skillCheckCalc to determine chance of diceset reaching target\n   * @returns targetChance but modified to account for either advantage or disadvantage\n   */\n  skillCheckCalcAdvantageDisadvantage(\n    advantage: Advantage, targetChance: number\n  ): number {\n    switch(advantage) {\n      case Advantage.Advantage:\n        return this.skillCheckCalcAdvantage(targetChance);\n      case Advantage.Disadvantage:\n        return this.skillCheckCalcDisadvantage(targetChance);\n      default:\n        return targetChance;\n    }\n  }\n\n  /**\n   * This function just has a console.log to check for advantage.\n   * It's a testing function to make sure that advantage is being set properly\n   * @param advantage diceset.advantage value\n   */\n  checkAdvantageValue(advantage: Advantage) {\n    switch(advantage) {\n      case Advantage.None:\n        console.log('excecuting checkAdvantageValue -- Advantage.None');\n        break;\n      case Advantage.Advantage:\n        console.log('excecuting checkAdvantageValue -- Advantage.Advantage');\n        break;\n      case Advantage.Disadvantage:\n        console.log('excecuting checkAdvantageValue -- Advantage.Disadvantage');\n        break;\n      default:\n        console.log('excecuting checkAdvantageValue -- default');\n    }\n  }\n\n  /**\n   * This function calculates the percent chance of a skill check succeeding\n   * \n   * Explanation of Algorithm: O(n^3)\n   * \n   * The algorithm will iterate through the dice roll possibilities one die at a time, and add each of the possible die options on the current die to the list of sums.\n   * \n   * 1. possibleDiceValues() is used to convert dice set into 2d array\n   * 2. two arrays are created, sums1 and sums2.\n   * - sums1 is initiated to [0]. This array is used to store the sums generated from the dice already itereated through. This array will stay constant while the new die values are iterated through\n   * - sums2 is initiated to []. This array has the new sums from the dice value currently being iterated through pushed to it.\n   * 3. Assume [[1, 2], [1, 2, 3], [1, 2, 3]]\n   * The algorithm first itereates through the die values of the first die, and adds them to the values of the empty sums1 array. Sums are pushed to sums2.\n   * sums1 = [0];\n   * sums2 = [1, 2];\n   * 4. Sums2 is then copied to sums1.\n   * 5. Then, the next group of die results starts being iterated through, and gets added to values in sums1 array\n   * \n   * first loop of sums1:\n   * \n   * sums1 = [1, 2];\n   * \n   * sums2 = [1 + 1, 2 + 1];\n   * \n   * second loop of sums1:\n   * \n   * sums1 = [1, 2];\n   * \n   * sums2 = [1 + 1, 2 + 1, 1 + 2, 2 + 2];\n   * \n   * third loop of sums1:\n   * \n   * sums2 = [1 + 1, 2 + 1, 1 + 2, 2 + 2, 1 + 3, 2 + 3];\n   * \n   * After loop of dieFaces:\n   * \n   * sums1 = [1, 2];\n   * \n   * sums2 = [1 + 1, 2 + 1, 1 + 2, 2 + 2, 1 + 3, 2 + 3];\n   * \n   * Second loop of dieFaces:\n   * \n   * sums1 = [2, 3, 3, 4, 4, 5]; // Copy of sums2, except I simplified the sums\n   * \n   * sums2 = [1 + 1, 2 + 1, 1 + 2, 2 + 2, 1 + 3, 2 + 3];\n   * \n   * first iteration of sums1:\n   * \n   * sums2 = [2 + 1, 3 + 1, 3 + 1, 4 + 1, 4 + 1, 5 + 1];\n   * \n   * second iteration of sums1:\n   * \n   * sums2 = [2 + 1, 3 + 1, 3 + 1, 4 + 1, 4 + 1, 5 + 1, \n   *          2 + 2, 3 + 2, 3 + 2, 4 + 2, 4 + 2, 5 + 2];\n   * \n   * third iteration of sums1:\n   * \n   * sums2 = [2 + 1, 3 + 1, 3 + 1, 4 + 1, 4 + 1, 5 + 1, \n   *          2 + 2, 3 + 2, 3 + 2, 4 + 2, 4 + 2, 5 + 2,\n   *          2 + 3, 3 + 3, 3 + 3, 4 + 3, 4 + 3, 5 + 3];\n   * \n   * Final value of sums1 after loop: [3, 4, 4, 5, 5, 6, 4, 5, 5, 6, 6, 7, 5, 6, 6, 7, 7, 8]\n   * \n   * 6. The algorithm filters the array for the sum values over the target\n   * 7. Divide number of die rolls over the target over total number of die roll possibilities, and convert it to a percentage\n   * @param diceset diceset object that represents the dice being rolled,\n   * and represents the target DC for the skillcheck\n   * @returns percentage chance of success rounded to two decimal points\n   */\n  skillCheckCalc(diceset: DiceSetI): number {\n    if(this.minRoll(diceset) >= diceset.target) {\n      // calculates chance of natural 20 (is .95)\n      return this.skillCheckCalcModifiers(diceset, .95)\n    } else if(this.maxRoll(diceset)  x >= target).length;\n    let numPossibleRolls = this.numPossibleDieRolls(diceset);\n    let fractionAboveTarget = numRollsAboveTarget / numPossibleRolls;\n    return this.skillCheckCalcModifiers(diceset, fractionAboveTarget);\n  }\n\n  /**\n   * This function modifies the fraction probability calculated from skill check calc to the number used by the user interface\n   * Performs modifications like transforming the fraction into a percentage.\n   * This is called before the number is returned in skillcheckcalc\n   * @param diceset input diceset from user\n   * @param probability the raw number from skillcheckcalc\n   * @returns Modified number that is used by the code\n   */\n  skillCheckCalcModifiers(diceset: DiceSetI, probability: number): number {\n    return this.toPercentageDefault(\n      this.adjustProbabilityForAttempts(\n        this.skillCheckCalcAdvantageDisadvantage(\n          diceset.advantage, probability\n        ),\n        diceset.attempts\n      )\n    )[0];\n  }\n\n  /**\n   * This algorithm multiplies the probability of success by the amount of attempts.\n   * \n   * This algorithm is used in the end of skillCheckCalc to account for multiple attempts\n   * @param likelihoodTarget The probability value of something\n   * @param attempts Number of times that the probability chance is performed\n   * @returns The chance of the probability succeeding at least once in the multiple attempts\n   */\n  adjustProbabilityForAttempts(\n    likelihoodTarget: number, attempts: number\n  ): number {\n    console.log(`adjust probability for attempts ${likelihoodTarget} ${attempts}`);\n    return 1 - (1 - likelihoodTarget) ** attempts;\n  }\n\n  /**\n   * This algorithm is a variation of skillCheckCalc that generates a full map of results.\n   * This variation does not look at the target of the roll\n   * @param diceset input dice set\n   * @returns Map[roll result : number of rolls with roll result]\n   */\n  diceCalcMap(diceset: DiceSetI): Map {\n    let finalSums = new Map();\n    let possibleValues = this.possibleDiceValues(diceset);\n    let sums1: number[] = [0];\n    let sums2: number[] = [];\n    for(let diceFaces of possibleValues) {\n      for(let currentDieValue of diceFaces) {\n        for(let currentSum of sums1) {\n          sums2.push(currentSum + currentDieValue);\n        }\n      }\n      sums1 = sums2.slice();\n      sums2 = [];\n    }\n    // create map\n    for(let i of sums1) {\n      let modI = i + diceset.modifier;\n      finalSums.set(modI, (finalSums.get(modI) ?? 0) + 1);\n    }\n    return finalSums;\n  }\n\n  /**\n   * This algorithm is a variation of skillCheckCalc that generates a full map of results.\n   * This variation does not look at the target of the roll\n   * To account for Advantage/Disadvantage, it adds an additional d20, and adds additional rolls taking the min/max with the additional d20\n   * @param diceset input dice set\n   * @returns Map[roll result : number of rolls with roll result]\n   */\n  diceCalcMapAdvantage(diceset: DiceSetI): Map {\n    let finalSums = new Map();\n    let possibleValues: number[][] = this.possibleDiceValues(diceset);\n    possibleValues = this.diceCalcMapSetupPossibleValues(\n      possibleValues, diceset.advantage\n    );\n    let sums1: number[] = [0];\n    let sums2: number[] = [];\n    for(let [dieIndex, diceFaces] of possibleValues.entries()) {\n      for(let currentDieValue of diceFaces) {\n        for(let currentSum of sums1) {\n          if(\n            (diceset.advantage === Advantage.Advantage ||\n            diceset.advantage === Advantage.Disadvantage) &&\n            dieIndex == 1\n          ) {\n            let nextDiceVal: number | null = this.diceCalcMapSetupChooseDice(\n              currentSum, currentDieValue, diceset.advantage\n            );\n            if(nextDiceVal) {\n              sums2.push(nextDiceVal);\n            }\n          } else {\n            sums2.push(currentDieValue + currentSum);\n          }\n        }\n      }\n      sums1 = sums2.slice();\n      sums2 = [];\n    }\n    for(let i of sums1) {\n      let modI = i + diceset.modifier;\n      finalSums.set(modI, (finalSums.get(modI) ?? 0) + 1);\n    }\n    return finalSums;\n  }\n\n  /**\n   * Takes the value from possibleValues, and modifies the number generated to account for advantage and savage attacker\n   * @param possibleValues number[][] type of possible die values created from possibleDiceValues() function\n   * @param advantage enum set by the diceset that determines if the dice are rolled with advantage or disadvantage\n   * @returns possibleValues with additional dice added to account for advantage roll or savage attacker roll\n   */\n  diceCalcMapSetupPossibleValues(\n    possibleValues: number[][], advantage: Advantage\n  ): number[][] {\n    switch(advantage) {\n      case Advantage.Advantage:\n      case Advantage.Disadvantage:\n        // Advantage requires a second D20\n        possibleValues.push(\n          [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n        );\n        return possibleValues.reverse();\n      case Advantage.SavageAttacker:\n        return possibleValues.flatMap(\n          (dieValue) => [dieValue, dieValue]\n        );\n      default:\n        return possibleValues\n    }\n  }\n\n  /**\n   * Called in the iterator for generating skillCheckCalc and diceCalc\n   * @param diceValue1 dice value in sums1\n   * @param diceValue2 dice value in sums2\n   * @param advantage determines what case dice are rolled with\n   * @returns \n   */\n  diceCalcMapSetupChooseDice(\n    diceValue1: number, diceValue2: number, advantage: Advantage\n  ): number | null {\n    // if(diceValue1 == diceValue2) {\n    //   return null;\n    // }\n    switch(advantage) {\n      case Advantage.Advantage:\n      case Advantage.SavageAttacker:\n        // console.log(`advantage calced for ${diceValue1}, ${diceValue2}`)\n        return Math.max(diceValue1, diceValue2);\n      case Advantage.Disadvantage:\n        // console.log(`disadvantage calced for ${diceValue1}, ${diceValue2}`)\n        return Math.min(diceValue1, diceValue2);\n      default:\n        console.log('dice calc choose advantage dice improperly invoked');\n        return null;\n    }\n  }\n\n  /**\n   * Calls diceCalcMap to create map from diceset, and uses the map created to convert into DiceResults array\n   * DiceResults array is the data type used to make the roll results table\n   * @param diceset input dice set, and modifier to dice rolls\n   * @returns DiceResults array that holds the number of rolls, and the percentage of those rols to the whole\n   */\n  diceCalcResults(diceset: DiceSetI): DiceResults[] {\n    // let map: Map = this.diceCalcMap(diceset);\n    let map: Map = this.diceCalcMapAdvantage(diceset);\n    let numPossibleRolls = this.numPossibleDieRolls(diceset);\n    let totalRolls = 0;\n    map.forEach((numRolls) => totalRolls += numRolls)\n    let dieResults: DiceResults[] = [];\n    let cumulativePercentageTotal = totalRolls;\n    map.forEach((numRolls, roll) => {\n      let numDecimalSpaces = this.toPercentageDefault(numRolls / totalRolls)[1] + 1;\n      if(this.toPercentageDefault(numRolls / totalRolls)[0] > .01) {\n        numDecimalSpaces = 2;\n      }\n      dieResults.push({\n        rollResult: roll,\n        numResults: numRolls * diceset.attempts,\n        percentageResults: this.toPercentage(numRolls / totalRolls, numDecimalSpaces),\n        cumPercentageResults: this.toPercentage(cumulativePercentageTotal / totalRolls, \n                                                numDecimalSpaces),\n      })\n      cumulativePercentageTotal -= numRolls;\n    })\n    return dieResults;\n  }\n\n  /**\n   * This function is used in the skill-check component to generate the default d20 table when no modifiers nor separate dice rolls have been applied\n   * @returns List of DiceResults that can be used to generate the dice-results table for a default roll of a d20 with no modifiers\n   */\n  defaultD20RollResults(): DiceResults[] {\n    let dieResults: DiceResults[] = [];\n    let cumulativePercentageTotal = 20\n    for(let i = 1; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpellsService.html":{"url":"injectables/SpellsService.html","title":"injectable - SpellsService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SpellsService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/spells.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is for http calls to get a list of all the dnd spells\napi used: https://www.dnd5eapi.co/apiapi used to test: https://jsonplaceholder.typicode.com/\nMain functions: getAllSpellsOfLevel, getAllSpells, getSpell\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: HttpClient)\n                                \n                            \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                injection\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getAllSpells\n                                \n                            \n            \n                            \n                                \n            getAllSpells()\n                                \n                            \n            \n                            \n                                \n                                        Makes call to dnd5eapi to get spell list\n            \n                                        \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                Observable that when subscribed to will get all the spells in dnd up to 6th levelThe return value is a SpellResponse type which contains a list of the spells in SpellResponse.results\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getAllSpellsOfLevel\n                                \n                            \n            \n                            \n                                \n            getAllSpellsOfLevel(level: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                level\n                                                            \n                                                            \n                                                                spell level to filter spells\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                Observable that when subscribed to will get a list of all spells of said level\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSpell\n                                \n                            \n            \n                            \n                                \n            getSpell(url: string, modifier: number)\n                                \n                            \n            \n                            \n                                \n                                        This function creates a SpellI by making an API request given a specific url.DnD API returns a specific url with each spell name when searching all spells that contains additional information about the spell.This function makes a separate API call using that new url, and attempts to create a SpellI data type using the info from the API request\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                url\n                                                            \n                                                            \n                                                                url from SpellResponseResults type\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                modifier\n                                                            \n                                                            \n                                                                In order to properly set spell damage, the spell modifier needs to be set based on what the user had inputted\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                Observable that when subscribed to will give a Spell data type that holds all necessary information about the spell\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     http\n                                \n                            \n                            \n                                \n                                    http:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     HttpClient\n                                \n                            \n                            \n                                \n                                    HttpClient:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Protected spellsList\n                                \n                            \n                            \n                                \n                                    spellsList:     SpellI[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     url\n                                \n                            \n                            \n                                \n                                    url:     URL\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SpellI, SpellResponse, Spell } from './spell';\nimport { map, Observable } from 'rxjs';\n\n/**\n * This service is for http calls to get a list of all the dnd spells\n * \n * api used: https://www.dnd5eapi.co/api\n * api used to test: https://jsonplaceholder.typicode.com/\n * \n * Main functions: getAllSpellsOfLevel, getAllSpells, getSpell\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpellsService {\n\n  http!: HttpClient;\n  url = new URL('https://www.dnd5eapi.co/api');\n  protected spellsList: SpellI[] = [];\n\n  /**\n   * Makes call to dnd5eapi to get spell list\n   * @returns Observable that when subscribed to will get all the spells in dnd up to 6th level\n   * The return value is a SpellResponse type which contains a list of the spells in SpellResponse.results\n   */\n  getAllSpells(): Observable {\n    return this.http.get(\n      `${this.url.href}/spells?level=0&level=1&level=2&level=3&level=4&level=5&level=6`,\n      );\n  }\n\n  /**\n   * \n   * @param level spell level to filter spells\n   * @returns Observable that when subscribed to will get a list of all spells of said level\n   */\n  getAllSpellsOfLevel(level: number): Observable {\n    return this.http.get(\n      `${this.url.href}/spells?level=${level}`,\n      );\n  }\n\n  /**\n   * This function creates a SpellI by making an API request given a specific url.\n   * DnD API returns a specific url with each spell name when searching all spells that contains additional information about the spell.\n   * This function makes a separate API call using that new url, and attempts to create a SpellI data type using the info from the API request\n   * @param url url from SpellResponseResults type\n   * @param modifier In order to properly set spell damage, the spell modifier needs to be set based on what the user had inputted\n   * @returns Observable that when subscribed to will give a Spell data type that holds all necessary information about the spell\n   */\n  getSpell(url: string, modifier=0): Observable {\n    return this.http.\n      get(\n        `${this.url.origin}${url}`\n      ).pipe(map((response) => {\n        console.log('pipe response', response)\n        let spellName: string = response['name'] as unknown as string;\n        let spellLevel: number = response['level'] as unknown as number;\n        let spell = new Spell(spellName, url, spellLevel);\n        if(spellLevel == 0) {\n          spell.setDamageFromAPI(\n            {'0': response['damage']['damage_at_character_level']['1']},\n            modifier\n          )\n        } else {\n          try {\n            spell.setDamageFromAPI(\n              response['damage']['damage_at_slot_level'], \n              modifier\n            );\n          } catch(e) {\n            spell.setDamageFromAPI(\n              response['heal_at_slot_level'] as unknown as {[level: string]: string}, modifier\n            )\n          }\n        }\n        return spell;\n    }));\n  }\n\n  /**\n   * \n   * @param http injection\n   */\n  constructor(http: HttpClient) { \n    this.http = http;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiceSet.html":{"url":"classes/DiceSet.html","title":"class - DiceSet","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  DiceSet\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/diceset.ts\n        \n\n            \n                Description\n            \n            \n                DiceSet data type implementation of DiceSetIDiceSet class is used to set default values for variables in DiceSetIDiceSet class is also used to implement iterator used in dice-calculations.serivce.ts\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(undefined: { d4?: number; d6?: number; d8?: number; d10?: number; d12?: number; d20?: number; modifier?: num..., dicestring: string)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     \n                                \n                            \n            \n                            \n                                \n            ()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     toString\n                                \n                            \n            \n                            \n                                \n            toString()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     advantage\n                                \n                            \n                            \n                                \n                                    advantage:     Advantage\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     attempts\n                                \n                            \n                            \n                                \n                                    attempts:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 1\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     d10\n                                \n                            \n                            \n                                \n                                    d10:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     d12\n                                \n                            \n                            \n                                \n                                    d12:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     d20\n                                \n                            \n                            \n                                \n                                    d20:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     d4\n                                \n                            \n                            \n                                \n                                    d4:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     d6\n                                \n                            \n                            \n                                \n                                    d6:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     d8\n                                \n                            \n                            \n                                \n                                    d8:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private keys\n                                \n                            \n                            \n                                \n                                    keys:     number[]\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     modifier\n                                \n                            \n                            \n                                \n                                    modifier:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 0\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     number\n                                \n                            \n                            \n                                \n                                    number:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     number\n                                \n                            \n                            \n                                \n                                    number:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     number\n                                \n                            \n                            \n                                \n                                    number:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     number\n                                \n                            \n                            \n                                \n                                    number:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     number\n                                \n                            \n                            \n                                \n                                    number:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     number\n                                \n                            \n                            \n                                \n                                    number:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     target\n                                \n                            \n                            \n                                \n                                    target:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 0\n                                    \n                                \n                        \n                    \n            \n    \n    \n        export interface DiceSetI extends Iterable {\n    d4?: number;\n    d6?: number;\n    d8?: number;\n    d10?: number;\n    d12?: number;\n    d20?: number;\n    modifier: number;\n    /** Used in skill check dice calculations for the target value that the diceset is supposed to be equal */\n    target: number;\n    attempts: number;\n    advantage: Advantage;\n}\n\n/**\n * This interface is a data type to hold the number generated from calculating the dice roll results.\n */\nexport interface DiceResults {\n    /** the number created by adding together all the dice rolled in a DiceSetI */\n    rollResult: number;\n    /** the number of times adding the dice together resulted in the rollResult */\n    numResults: number;\n    /** number of rolls with rollResult / total number of rolls possible from all the diceRolls. Can also be described as the percentage when rolling a diceset, that you would get rollResult as the roll. */\n    percentageResults: number;\n    /** the percent chance when rolling a diceset that you would get a rollResult higher than or equal to the current rollResult */\n    cumPercentageResults: number;\n}\n\n/**\n * DiceSet data type implementation of DiceSetI\n * DiceSet class is used to set default values for variables in DiceSetI\n * DiceSet class is also used to implement iterator used in dice-calculations.serivce.ts\n */\nexport class DiceSet implements DiceSetI {\n    d4!: number;\n    d6!: number;\n    d8!: number;\n    d10!: number;\n    d12!: number;\n    d20!: number;\n    modifier: number = 0;\n    target: number = 0;\n    attempts: number = 1;\n    advantage: Advantage = Advantage.None;\n    private keys = [4, 6, 8, 10, 12, 20];\n\n    [Symbol.iterator](): Iterator {\n        let i = 0;\n        let keys = this.keys;\n        let values = [\n            this.d4 ?? 0, this.d6 ?? 0, this.d8 ?? 0, \n            this.d10 ?? 0, this.d12 ?? 0, this.d20 ?? 0\n        ]\n\n        return {\n            next() {\n                if (i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Spell.html":{"url":"classes/Spell.html","title":"class - Spell","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Spell\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/spell.ts\n        \n\n            \n                Description\n            \n            \n                The data type version of SpellI, which has additional functions to allow easier setting of values from DnD API\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(name: string, url: string, level: number, damage: { 0: DiceSet; })\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     setDamageFromAPI\n                                \n                            \n            \n                            \n                                \n            setDamageFromAPI(response: { [level: string]: string; }, modifier: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     toString\n                                \n                            \n            \n                            \n                                \n            toString()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     damage\n                                \n                            \n                            \n                                \n                                    damage:     { [level: number]: DiceSetI; }\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     level\n                                \n                            \n                            \n                                \n                                    level:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     url\n                                \n                            \n                            \n                                \n                                    url:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { DiceSetI, DiceSet } from \"./diceset\";\n\n/**\n * Interface used to hold all necessary information about each spell\n */\nexport interface SpellI {\n    name: string\n    url: string\n    level: number\n    damage: { [level: number]: DiceSetI }\n}\n\n/**\n * The data type version of SpellI, which has additional functions to allow easier setting of values from DnD API\n */\nexport class Spell implements SpellI {\n    name: string;\n    url: string;\n    level: number;\n    damage: { [level: number]: DiceSetI; };\n    \n    constructor(name='', url='', level=1, damage={0: new DiceSet({})}) {\n        this.name = name;\n        this.url = url;\n        this.level = level;\n        this.damage = damage;\n    }\n\n    setDamageFromAPI(response: {[level: string]: string}, modifier: number) {\n        for(let key in response) {\n            console.log('damage from api', parseInt(key), response);\n            this.damage[parseInt(key)] = new DiceSet(\n                {modifier: modifier}, response[key]\n            );\n            console.log('damage variable', this.damage[1]);\n        }\n    }\n\n    toString(): string {\n        let retString = `name: ${this.name}, url: ${this.url}\\n`;\n        retString += `damage: `\n        for(let key in this.damage) {\n            retString += `{${key}: ${this.damage[key]}\\n`\n        }\n        return retString;\n    }\n\n}\n\n/**\n * data type generated from: https://transform.tools/json-to-typescript\n * Based on response from https://www.dnd5eapi.co/api/spells\n */\nexport interface SpellResponse {\n    count: number\n    results: SpellResponseResults[]\n}\n\n/**\n * Used to store individual information about each spell returned as a result from https://www.dnd5eapi.co/api/spells\n * data type generated from: https://transform.tools/json-to-typescript\n */\nexport interface SpellResponseResults {\n    index: string\n    name: string\n    level: number\n    url: string\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CharacterStats.html":{"url":"interfaces/CharacterStats.html","title":"interface - CharacterStats","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CharacterStats\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/characterstats.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        charisma\n                                    \n                                \n                                \n                                    \n                                        charisma:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        constitution\n                                    \n                                \n                                \n                                    \n                                        constitution:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        dexterity\n                                    \n                                \n                                \n                                    \n                                        dexterity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        intelligence\n                                    \n                                \n                                \n                                    \n                                        intelligence:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        proficiency\n                                    \n                                \n                                \n                                    \n                                        proficiency:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        strength\n                                    \n                                \n                                \n                                    \n                                        strength:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        wisdom\n                                    \n                                \n                                \n                                    \n                                        wisdom:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface CharacterStats {\n    strength: number,\n    dexterity: number,\n    constitution: number,\n    intelligence: number,\n    wisdom: number,\n    charisma: number,\n    proficiency: number,\n    level: number\n}\n\n\nexport enum CharacterClass {\n    Barbarian,\n    Bard,\n    Cleric,\n    Druid,\n    Fighter,\n    Monk,\n    Paladin,\n    Ranger,\n    Rogue,\n    Sorcerer,\n    Warlock,\n    Wizard\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiceResults.html":{"url":"interfaces/DiceResults.html","title":"interface - DiceResults","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DiceResults\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/diceset.ts\n        \n\n            \n                Description\n            \n            \n                This interface is a data type to hold the number generated from calculating the dice roll results.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        cumPercentageResults\n                                    \n                                \n                                \n                                    \n                                        cumPercentageResults:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    the percent chance when rolling a diceset that you would get a rollResult higher than or equal to the current rollResult \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        numResults\n                                    \n                                \n                                \n                                    \n                                        numResults:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    the number of times adding the dice together resulted in the rollResult \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        percentageResults\n                                    \n                                \n                                \n                                    \n                                        percentageResults:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    number of rolls with rollResult / total number of rolls possible from all the diceRolls. Can also be described as the percentage when rolling a diceset, that you would get rollResult as the roll. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        rollResult\n                                    \n                                \n                                \n                                    \n                                        rollResult:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    the number created by adding together all the dice rolled in a DiceSetI \n\n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface DiceSetI extends Iterable {\n    d4?: number;\n    d6?: number;\n    d8?: number;\n    d10?: number;\n    d12?: number;\n    d20?: number;\n    modifier: number;\n    /** Used in skill check dice calculations for the target value that the diceset is supposed to be equal */\n    target: number;\n    attempts: number;\n    advantage: Advantage;\n}\n\n/**\n * This interface is a data type to hold the number generated from calculating the dice roll results.\n */\nexport interface DiceResults {\n    /** the number created by adding together all the dice rolled in a DiceSetI */\n    rollResult: number;\n    /** the number of times adding the dice together resulted in the rollResult */\n    numResults: number;\n    /** number of rolls with rollResult / total number of rolls possible from all the diceRolls. Can also be described as the percentage when rolling a diceset, that you would get rollResult as the roll. */\n    percentageResults: number;\n    /** the percent chance when rolling a diceset that you would get a rollResult higher than or equal to the current rollResult */\n    cumPercentageResults: number;\n}\n\n/**\n * DiceSet data type implementation of DiceSetI\n * DiceSet class is used to set default values for variables in DiceSetI\n * DiceSet class is also used to implement iterator used in dice-calculations.serivce.ts\n */\nexport class DiceSet implements DiceSetI {\n    d4!: number;\n    d6!: number;\n    d8!: number;\n    d10!: number;\n    d12!: number;\n    d20!: number;\n    modifier: number = 0;\n    target: number = 0;\n    attempts: number = 1;\n    advantage: Advantage = Advantage.None;\n    private keys = [4, 6, 8, 10, 12, 20];\n\n    [Symbol.iterator](): Iterator {\n        let i = 0;\n        let keys = this.keys;\n        let values = [\n            this.d4 ?? 0, this.d6 ?? 0, this.d8 ?? 0, \n            this.d10 ?? 0, this.d12 ?? 0, this.d20 ?? 0\n        ]\n\n        return {\n            next() {\n                if (i \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiceSetI.html":{"url":"interfaces/DiceSetI.html","title":"interface - DiceSetI","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DiceSetI\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/diceset.ts\n        \n\n            \n                Description\n            \n            \n                This interface holds how many dice are rolled for each type of dieIterable: returns arrays of all the dice values:[4, d4num], [6, d6num], [8, d8num], [10, d10num], [12, d12num], [20, d20num]This data type is used in dice-calculations.service.ts where the dice information is used in different calculations.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        advantage\n                                    \n                                \n                                \n                                    \n                                        advantage:     Advantage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Advantage\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        attempts\n                                    \n                                \n                                \n                                    \n                                        attempts:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        d10\n                                    \n                                \n                                \n                                    \n                                        d10:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        d12\n                                    \n                                \n                                \n                                    \n                                        d12:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        d20\n                                    \n                                \n                                \n                                    \n                                        d20:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        d4\n                                    \n                                \n                                \n                                    \n                                        d4:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        d6\n                                    \n                                \n                                \n                                    \n                                        d6:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        d8\n                                    \n                                \n                                \n                                    \n                                        d8:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        modifier\n                                    \n                                \n                                \n                                    \n                                        modifier:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                            \n                                \n                                    Used in skill check dice calculations for the target value that the diceset is supposed to be equal \n\n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface DiceSetI extends Iterable {\n    d4?: number;\n    d6?: number;\n    d8?: number;\n    d10?: number;\n    d12?: number;\n    d20?: number;\n    modifier: number;\n    /** Used in skill check dice calculations for the target value that the diceset is supposed to be equal */\n    target: number;\n    attempts: number;\n    advantage: Advantage;\n}\n\n/**\n * This interface is a data type to hold the number generated from calculating the dice roll results.\n */\nexport interface DiceResults {\n    /** the number created by adding together all the dice rolled in a DiceSetI */\n    rollResult: number;\n    /** the number of times adding the dice together resulted in the rollResult */\n    numResults: number;\n    /** number of rolls with rollResult / total number of rolls possible from all the diceRolls. Can also be described as the percentage when rolling a diceset, that you would get rollResult as the roll. */\n    percentageResults: number;\n    /** the percent chance when rolling a diceset that you would get a rollResult higher than or equal to the current rollResult */\n    cumPercentageResults: number;\n}\n\n/**\n * DiceSet data type implementation of DiceSetI\n * DiceSet class is used to set default values for variables in DiceSetI\n * DiceSet class is also used to implement iterator used in dice-calculations.serivce.ts\n */\nexport class DiceSet implements DiceSetI {\n    d4!: number;\n    d6!: number;\n    d8!: number;\n    d10!: number;\n    d12!: number;\n    d20!: number;\n    modifier: number = 0;\n    target: number = 0;\n    attempts: number = 1;\n    advantage: Advantage = Advantage.None;\n    private keys = [4, 6, 8, 10, 12, 20];\n\n    [Symbol.iterator](): Iterator {\n        let i = 0;\n        let keys = this.keys;\n        let values = [\n            this.d4 ?? 0, this.d6 ?? 0, this.d8 ?? 0, \n            this.d10 ?? 0, this.d12 ?? 0, this.d20 ?? 0\n        ]\n\n        return {\n            next() {\n                if (i \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropdownGroup.html":{"url":"interfaces/DropdownGroup.html","title":"interface - DropdownGroup","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DropdownGroup\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dropdown.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:     DropdownItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DropdownItem[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        groupName\n                                    \n                                \n                                \n                                    \n                                        groupName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface DropdownGroup {\n    groupName: string;\n    group: DropdownItem[];\n}\nexport interface DropdownItem {\n    label: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropdownItem.html":{"url":"interfaces/DropdownItem.html","title":"interface - DropdownItem","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DropdownItem\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dropdown.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface DropdownGroup {\n    groupName: string;\n    group: DropdownItem[];\n}\nexport interface DropdownItem {\n    label: string;\n    value: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpellI.html":{"url":"interfaces/SpellI.html","title":"interface - SpellI","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  SpellI\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/spell.ts\n        \n\n            \n                Description\n            \n            \n                Interface used to hold all necessary information about each spell\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        damage\n                                    \n                                \n                                \n                                    \n                                        damage:     { [level: number]: DiceSetI; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { [level: number]: DiceSetI; }\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { DiceSetI, DiceSet } from \"./diceset\";\n\n/**\n * Interface used to hold all necessary information about each spell\n */\nexport interface SpellI {\n    name: string\n    url: string\n    level: number\n    damage: { [level: number]: DiceSetI }\n}\n\n/**\n * The data type version of SpellI, which has additional functions to allow easier setting of values from DnD API\n */\nexport class Spell implements SpellI {\n    name: string;\n    url: string;\n    level: number;\n    damage: { [level: number]: DiceSetI; };\n    \n    constructor(name='', url='', level=1, damage={0: new DiceSet({})}) {\n        this.name = name;\n        this.url = url;\n        this.level = level;\n        this.damage = damage;\n    }\n\n    setDamageFromAPI(response: {[level: string]: string}, modifier: number) {\n        for(let key in response) {\n            console.log('damage from api', parseInt(key), response);\n            this.damage[parseInt(key)] = new DiceSet(\n                {modifier: modifier}, response[key]\n            );\n            console.log('damage variable', this.damage[1]);\n        }\n    }\n\n    toString(): string {\n        let retString = `name: ${this.name}, url: ${this.url}\\n`;\n        retString += `damage: `\n        for(let key in this.damage) {\n            retString += `{${key}: ${this.damage[key]}\\n`\n        }\n        return retString;\n    }\n\n}\n\n/**\n * data type generated from: https://transform.tools/json-to-typescript\n * Based on response from https://www.dnd5eapi.co/api/spells\n */\nexport interface SpellResponse {\n    count: number\n    results: SpellResponseResults[]\n}\n\n/**\n * Used to store individual information about each spell returned as a result from https://www.dnd5eapi.co/api/spells\n * data type generated from: https://transform.tools/json-to-typescript\n */\nexport interface SpellResponseResults {\n    index: string\n    name: string\n    level: number\n    url: string\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpellResponse.html":{"url":"interfaces/SpellResponse.html","title":"interface - SpellResponse","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  SpellResponse\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/spell.ts\n        \n\n            \n                Description\n            \n            \n                data type generated from: https://transform.tools/json-to-typescriptBased on response from https://www.dnd5eapi.co/api/spells\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        results\n                                    \n                                \n                                \n                                    \n                                        results:     SpellResponseResults[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpellResponseResults[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { DiceSetI, DiceSet } from \"./diceset\";\n\n/**\n * Interface used to hold all necessary information about each spell\n */\nexport interface SpellI {\n    name: string\n    url: string\n    level: number\n    damage: { [level: number]: DiceSetI }\n}\n\n/**\n * The data type version of SpellI, which has additional functions to allow easier setting of values from DnD API\n */\nexport class Spell implements SpellI {\n    name: string;\n    url: string;\n    level: number;\n    damage: { [level: number]: DiceSetI; };\n    \n    constructor(name='', url='', level=1, damage={0: new DiceSet({})}) {\n        this.name = name;\n        this.url = url;\n        this.level = level;\n        this.damage = damage;\n    }\n\n    setDamageFromAPI(response: {[level: string]: string}, modifier: number) {\n        for(let key in response) {\n            console.log('damage from api', parseInt(key), response);\n            this.damage[parseInt(key)] = new DiceSet(\n                {modifier: modifier}, response[key]\n            );\n            console.log('damage variable', this.damage[1]);\n        }\n    }\n\n    toString(): string {\n        let retString = `name: ${this.name}, url: ${this.url}\\n`;\n        retString += `damage: `\n        for(let key in this.damage) {\n            retString += `{${key}: ${this.damage[key]}\\n`\n        }\n        return retString;\n    }\n\n}\n\n/**\n * data type generated from: https://transform.tools/json-to-typescript\n * Based on response from https://www.dnd5eapi.co/api/spells\n */\nexport interface SpellResponse {\n    count: number\n    results: SpellResponseResults[]\n}\n\n/**\n * Used to store individual information about each spell returned as a result from https://www.dnd5eapi.co/api/spells\n * data type generated from: https://transform.tools/json-to-typescript\n */\nexport interface SpellResponseResults {\n    index: string\n    name: string\n    level: number\n    url: string\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpellResponseResults.html":{"url":"interfaces/SpellResponseResults.html","title":"interface - SpellResponseResults","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  SpellResponseResults\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/spell.ts\n        \n\n            \n                Description\n            \n            \n                Used to store individual information about each spell returned as a result from https://www.dnd5eapi.co/api/spellsdata type generated from: https://transform.tools/json-to-typescript\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { DiceSetI, DiceSet } from \"./diceset\";\n\n/**\n * Interface used to hold all necessary information about each spell\n */\nexport interface SpellI {\n    name: string\n    url: string\n    level: number\n    damage: { [level: number]: DiceSetI }\n}\n\n/**\n * The data type version of SpellI, which has additional functions to allow easier setting of values from DnD API\n */\nexport class Spell implements SpellI {\n    name: string;\n    url: string;\n    level: number;\n    damage: { [level: number]: DiceSetI; };\n    \n    constructor(name='', url='', level=1, damage={0: new DiceSet({})}) {\n        this.name = name;\n        this.url = url;\n        this.level = level;\n        this.damage = damage;\n    }\n\n    setDamageFromAPI(response: {[level: string]: string}, modifier: number) {\n        for(let key in response) {\n            console.log('damage from api', parseInt(key), response);\n            this.damage[parseInt(key)] = new DiceSet(\n                {modifier: modifier}, response[key]\n            );\n            console.log('damage variable', this.damage[1]);\n        }\n    }\n\n    toString(): string {\n        let retString = `name: ${this.name}, url: ${this.url}\\n`;\n        retString += `damage: `\n        for(let key in this.damage) {\n            retString += `{${key}: ${this.damage[key]}\\n`\n        }\n        return retString;\n    }\n\n}\n\n/**\n * data type generated from: https://transform.tools/json-to-typescript\n * Based on response from https://www.dnd5eapi.co/api/spells\n */\nexport interface SpellResponse {\n    count: number\n    results: SpellResponseResults[]\n}\n\n/**\n * Used to store individual information about each spell returned as a result from https://www.dnd5eapi.co/api/spells\n * data type generated from: https://transform.tools/json-to-typescript\n */\nexport interface SpellResponseResults {\n    index: string\n    name: string\n    level: number\n    url: string\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             appConfig\n                        \n                    \n                    \n                        \n                            appConfig:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockSpellResult0\n                        \n                    \n                    \n                        \n                            mockSpellResult0:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockSpellResult1\n                        \n                    \n                    \n                        \n                            mockSpellResult1:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockSpellResponse\n                        \n                    \n                    \n                        \n                            mockSpellResponse:     any\n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    15%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                src/app/attack-rolls/attack-rolls.component.ts\n            \n            \n                component\n            \n            \n                AttackRollsComponent\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                src/app/character-sheet/character-sheet.component.ts\n            \n            \n                component\n            \n            \n                CharacterSheetComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/characterstats.ts\n            \n            \n                interface\n            \n            \n                CharacterStats\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                src/app/dice-bonus-form/dice-bonus-form.component.ts\n            \n            \n                component\n            \n            \n                DiceBonusFormComponent\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                src/app/dice-calculations.service.ts\n            \n            \n                injectable\n            \n            \n                DiceCalculationsService\n            \n            \n                80 %\n                (17/21)\n            \n        \n        \n            \n                src/app/diceset.ts\n            \n            \n                classe\n            \n            \n                DiceSet\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                src/app/diceset.ts\n            \n            \n                interface\n            \n            \n                DiceResults\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/app/diceset.ts\n            \n            \n                interface\n            \n            \n                DiceSetI\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                src/app/die-roll-results-table/die-roll-results-table.component.ts\n            \n            \n                component\n            \n            \n                DieRollResultsTableComponent\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                src/app/dropdown.ts\n            \n            \n                interface\n            \n            \n                DropdownGroup\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/dropdown.ts\n            \n            \n                interface\n            \n            \n                DropdownItem\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/not-found/not-found.component.ts\n            \n            \n                component\n            \n            \n                NotFoundComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/overlay/overlay.component.ts\n            \n            \n                component\n            \n            \n                OverlayComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/skill-check/skill-check.component.ts\n            \n            \n                component\n            \n            \n                SkillCheckComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                src/app/spell.ts\n            \n            \n                classe\n            \n            \n                Spell\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/spell.ts\n            \n            \n                interface\n            \n            \n                SpellI\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/spell.ts\n            \n            \n                interface\n            \n            \n                SpellResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/spell.ts\n            \n            \n                interface\n            \n            \n                SpellResponseResults\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/spells.service.ts\n            \n            \n                injectable\n            \n            \n                SpellsService\n            \n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                src/app/stepper/stepper.component.ts\n            \n            \n                component\n            \n            \n                StepperComponent\n            \n            \n                14 %\n                (1/7)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
